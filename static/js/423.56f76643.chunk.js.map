{"version":3,"file":"static/js/423.56f76643.chunk.js","mappings":"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","sources":["webpack://powerpulse/./src/components/StatisticsItem/StatisticsItem.module.css?626e","components/StatisticsItem/StatisticsItem.jsx","webpack://powerpulse/./src/components/TitlePage/TitlePage.module.css?5ae7","components/TitlePage/TitlePage.jsx","hooks/useDiary.js","webpack://powerpulse/./src/pages/DiaryPage/DiaryPage.module.css?a519","webpack://powerpulse/./src/components/DayDashboard/DayDashboard.module.css?df9f","hooks/useStatistics.js","components/DayDashboard/DayDashboard.jsx","webpack://powerpulse/./src/components/DayExercises/DayExercises.module.css?8065","webpack://powerpulse/./src/components/ButtonAddItem/ButtonAddItem.module.css?98f8","components/ButtonAddItem/ButtonAddItem.jsx","../node_modules/nanoid/index.browser.js","webpack://powerpulse/./src/components/ExercisesTable/ExercisesTable.module.css?7d87","components/ExercisesTable/ExercisesTable.jsx","webpack://powerpulse/./src/components/EmptyList/EmptyList.module.css?c5b6","components/EmptyList/EmptyList.jsx","components/DayExercises/DayExercises.jsx","webpack://powerpulse/./src/components/DayProducts/DayProducts.module.css?74e4","webpack://powerpulse/./src/components/ProductsTable/ProductsTable.module.css?8d45","components/ProductsTable/ProductsTable.jsx","components/DayProducts/DayProducts.jsx","webpack://powerpulse/./src/components/DaySwitch/DaySwitch.module.css?9d6c","components/DaySwitch/DaySwitch.jsx","components/DaySwitch/DaySwitchCalendarStyle.js","pages/DiaryPage/DiaryPage.jsx","redux/diary/diarySelectors.js","utils/capitalizedWord.js","utils/formatData.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__ZAGsK\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__kw-pk\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__HJTjN\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__WSxqY\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__NRxuv\",\"statisticTitle\":\"StatisticsItem_statisticTitle__9-4pX\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__4BDlN\",\"statisticIcon\":\"StatisticsItem_statisticIcon__X8AOQ\",\"statisticValue\":\"StatisticsItem_statisticValue__qdzXl\"};","import css from './StatisticsItem.module.css';\nimport Icon from '../ComponIcon/Icon';\nimport PropTypes from 'prop-types';\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary,\n  fulfilledNorm = '',\n}) => {\n  return (\n    <>\n      <li\n        className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          fulfilledNorm !== '' && fulfilledNorm === 'positive'\n            ? css.statisticItemPositive\n            : fulfilledNorm !== '' && fulfilledNorm === 'negative'\n            ? css.statisticItemNegative\n            : ''\n        }`}\n      >\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\nStatisticsItem.propTypes = {\n  statisticsName: PropTypes.string.isRequired,\n  statisticsIcon: PropTypes.string.isRequired,\n  statisticsValue: PropTypes.string.isRequired,\n  statisticPrimary: PropTypes.bool,\n  fulfilledNorm: PropTypes.string,\n};\n\nexport default StatisticsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TitlePage_title__zyjBQ\"};","import css from './TitlePage.module.css';\nimport { motion } from 'framer-motion';\n\nexport default function TitlePage({ title }) {\n  return (\n    <div>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h1 className={css.title}>{title}</h1>\n      </motion.div>\n    </div>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { selectDiaryError, selectDiaryExercises, selectDiaryIsLoading, selectDiaryProducts } from \"../redux/diary/diarySelectors\";\n\nconst useDiary = () => {\n    const diaryProducts = useSelector(selectDiaryProducts);\n    const diaryExercises = useSelector(selectDiaryExercises);\n    const diaryIsLoading = useSelector(selectDiaryIsLoading);\n    const diaryError = useSelector(selectDiaryError);\n    \n    return {\n        diaryProducts,\n        diaryExercises,\n        diaryIsLoading,\n        diaryError,\n    };\n};\n\nexport default useDiary;","// extracted by mini-css-extract-plugin\nexport default {\"diaryPage\":\"DiaryPage_diaryPage__pKsQy\",\"calendarWrap\":\"DiaryPage_calendarWrap__cPPCu\",\"calendar\":\"DiaryPage_calendar__EWxfj\",\"sectionWrap\":\"DiaryPage_sectionWrap__fGhT1\"};","// extracted by mini-css-extract-plugin\nexport default {\"dayDashboard\":\"DayDashboard_dayDashboard__XV93s\",\"statisticList\":\"DayDashboard_statisticList__nct9L\",\"adviceWrap\":\"DayDashboard_adviceWrap__d1eN6\",\"adviceIconWrap\":\"DayDashboard_adviceIconWrap__f+yUg\",\"exclamationIcon\":\"DayDashboard_exclamationIcon__xfLbC\",\"adviceText\":\"DayDashboard_adviceText__Ky3eB\"};","import { useSelector } from 'react-redux';\nimport { selectUser } from '../redux/auth/authSelectors';\nimport {\n  selectDiaryExercises,\n  selectDiaryProducts,\n} from '../redux/diary/diarySelectors';\n\nconst useStatistics = () => {\n  const user = useSelector(selectUser);\n  const products = useSelector(selectDiaryProducts);\n  const execrcises = useSelector(selectDiaryExercises);\n\n  const dailyCalorieIntake = user.profileSettings?.bmr ?? '0';\n  const caloriesConsumed = products.reduce(\n    (sum, product) => sum + product.calories,\n    0\n  );\n  const caloriesRemaining = dailyCalorieIntake - caloriesConsumed;\n  const dailyPhysicalActivity = 110;\n  const caloriesBurned = execrcises.reduce(\n    (sum, execrcise) => sum + execrcise.calories,\n    0\n  );\n  const timeSport = execrcises.reduce(\n    (sum, execrcise) => sum + execrcise.time,\n    0\n  );\n\n  const sportsRemaining = Math.floor(timeSport / 60) - dailyPhysicalActivity;\n\n  return {\n    dailyCalorieIntake,\n    caloriesConsumed,\n    caloriesRemaining,\n    dailyPhysicalActivity,\n    caloriesBurned,\n    sportsRemaining,\n  };\n};\n\nexport default useStatistics;\n","import css from './DayDashboard.module.css';\n\nimport Icon from '../ComponIcon/Icon';\nimport StatisticsItem from '../StatisticsItem/StatisticsItem';\n\nimport useStatistics from '../../hooks/useStatistics';\n\nconst DayDashboard = () => {\n  const {\n    dailyCalorieIntake,\n    caloriesConsumed,\n    caloriesRemaining,\n    dailyPhysicalActivity,\n    caloriesBurned,\n    sportsRemaining,\n  } = useStatistics();\n\n  const isCaloriesRemaining =\n    caloriesConsumed < dailyCalorieIntake ? `positive` : `negative`;\n  const isSportsRemaining =\n    sportsRemaining > 0 ? `positive` : `negative`;\n\n  return (\n    <div className={css.dayDashboard}>\n      <ul className={css.statisticList}>\n        <StatisticsItem\n          statisticsName={'Daily calorie intake'}\n          statisticsValue={`${dailyCalorieIntake}`}\n          statisticsIcon={'Fluent_food'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Daily physical activity'}\n          statisticsValue={`${dailyPhysicalActivity} min`}\n          statisticsIcon={'Dumbbell'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Сalories consumed'}\n          statisticsValue={`${caloriesConsumed}`}\n          statisticsIcon={'Apple'}\n        />\n        <StatisticsItem\n          statisticsName={'Сalories burned'}\n          statisticsValue={`${caloriesBurned}`}\n          statisticsIcon={'Calories'}\n        />\n        <StatisticsItem\n          statisticsName={'Calories remaining'}\n          statisticsValue={`${caloriesRemaining}`}\n          statisticsIcon={'Bubble'}\n          fulfilledNorm={isCaloriesRemaining}\n        />\n        <StatisticsItem\n          statisticsName={'Sports remaining'}\n          statisticsValue={\n            isSportsRemaining === 'positive'\n              ? `+${sportsRemaining} min`\n              : `${sportsRemaining} min`\n          }\n          statisticsIcon={'Runner'}\n          fulfilledNorm={isSportsRemaining}\n        />\n      </ul>\n      <div className={css.adviceWrap}>\n        <div className={css.adviceIconWrap}>\n          <Icon\n            className={css.exclamationIcon}\n            iconId={'tabler:exclamation-mark'}\n          />\n        </div>\n        <p className={css.adviceText}>\n          Record all your meals in the calorie diary every day. This will help\n          you be aware of your nutrition and make informed choices.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayExecrcises\":\"DayExercises_dayExecrcises__bQ6ZY\",\"dayScrollWrap\":\"DayExercises_dayScrollWrap__LYu-4\",\"diaryNav\":\"DayExercises_diaryNav__wSSyn\",\"diarySubtitle\":\"DayExercises_diarySubtitle__56ycD\"};","// extracted by mini-css-extract-plugin\nexport default {\"addButtonLink\":\"ButtonAddItem_addButtonLink__6S3vs\",\"addButtonImg\":\"ButtonAddItem_addButtonImg__mhW8u\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport css from \"./ButtonAddItem.module.css\";\nimport Icon from \"../ComponIcon/Icon\";\nimport PropTypes from 'prop-types';\n\nconst ButtonAddItem = ({ titleLink, titleRoute }) => {\n  return (\n    <>\n      <NavLink className={css.addButtonLink} to={titleRoute}>\n        {titleLink}\n        <Icon className={css.addButtonImg} iconId={'Arrow'} />\n      </NavLink>\n    </>\n  );\n};\n\nButtonAddItem.propTypes = {\n  titleLink: PropTypes.string.isRequired,\n};\n\nexport default ButtonAddItem;\n\n\nButtonAddItem.propTypes = {\n  titleLink: PropTypes.string.isRequired,\n  titleRoute: PropTypes.string.isRequired,\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ExercisesTable_diaryMainItem__Uq6bI\",\"table\":\"ExercisesTable_table__57s17\",\"element\":\"ExercisesTable_element__XGGXa\",\"elementWrap\":\"ExercisesTable_elementWrap__Dw79t\",\"nameCategory\":\"ExercisesTable_nameCategory__NXhaV\",\"nameValue\":\"ExercisesTable_nameValue__ktQfv\",\"trashImg\":\"ExercisesTable_trashImg__f8acI\",\"nameTrash\":\"ExercisesTable_nameTrash__DY8HQ\",\"bodyTable\":\"ExercisesTable_bodyTable__D7rlB\",\"diaryMainList\":\"ExercisesTable_diaryMainList__eIyzS\"};","import { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport css from './ExercisesTable.module.css';\nimport capitalizedWord from 'utils/capitalizedWord';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../ComponIcon/Icon';\nimport { deleteExercisesDiary } from '../../redux/diary/diaryOperations';\n\nconst ExercisesTable = ({ exercises }) => {\n  const dispatch = useDispatch();\n\n  const deleteExercise = (_id) => {\n    dispatch(deleteExercisesDiary(_id));\n  };\n\n  return (\n    <>\n      <ul className={css.diaryMainList}>\n        {exercises.map(\n          ({ _id, bodyPart, equipment, name, target, calories, time }) => (\n            <li key={nanoid()} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Body Part</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(bodyPart)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Equipment</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(equipment)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Name</th>\n                    <td className={css.nameValue}>{capitalizedWord(name)}</td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Target</th>\n                    <td className={css.nameValue}>{capitalizedWord(target)}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Burned Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Time</th>\n                    <td className={css.nameValue}>{time}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td\n                      className={css.trashValue}\n                      onClick={() => deleteExercise(_id)}\n                    >\n                      <Icon className={css.trashImg} iconId={'Trash'} />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nExercisesTable.propTypes = {\n  exercises: PropTypes.array.isRequired,\n};\n\nexport default ExercisesTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"notFoundPlugTextWrap\":\"EmptyList_notFoundPlugTextWrap__t6Msc\",\"notFoundPlugText\":\"EmptyList_notFoundPlugText__zPRyy\"};","import css from \"./EmptyList.module.css\";\nimport PropTypes from 'prop-types';\n\nconst EmptyList = ({ listName }) => {\n  return (\n    <div className={css.notFoundPlugTextWrap}>\n      <p className={css.notFoundPlugText}>Not found {listName}</p>\n    </div>\n  );\n};\n\n\nEmptyList.propTypes = {\n  listName: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import css from \"./DayExercises.module.css\";\nimport useDiary from \"../../hooks/useDiary\";\n\nimport { EXERCISES_ROUTE } from \"../../utils/const\";\nimport ButtonAddItem from \"../ButtonAddItem/ButtonAddItem\";\nimport ExercisesTable from \"../ExercisesTable/ExercisesTable\";\nimport EmptyList from \"../EmptyList/EmptyList\";\n\nconst DayExercises = () => {\n  const { diaryExercises } = useDiary();\n\n  return (\n    <>\n      <div className={css.dayExecrcises}>\n        <div className={css.dayScrollWrap}>\n          <div className={css.diaryNav}>\n            <h3 className={css.diarySubtitle}>Execrcises</h3>\n            <ButtonAddItem\n              titleLink=\"Add exercise\"\n              titleRoute={EXERCISES_ROUTE}\n            />\n          </div>\n          {diaryExercises.length === 0 ? (\n            <EmptyList listName={\"exercises\"} />\n          ) : (\n            <ExercisesTable exercises={diaryExercises} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DayExercises;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayProducts\":\"DayProducts_dayProducts__LAo5g\",\"dayScrollWrap\":\"DayProducts_dayScrollWrap__DIuIV\",\"diaryNav\":\"DayProducts_diaryNav__JjD4d\",\"diarySubtitle\":\"DayProducts_diarySubtitle__3acfh\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ProductsTable_diaryMainItem__qlJX4\",\"element\":\"ProductsTable_element__aIisf\",\"elementWrap\":\"ProductsTable_elementWrap__0QI3A\",\"nameCategory\":\"ProductsTable_nameCategory__e1unZ\",\"nameValue\":\"ProductsTable_nameValue__dFBF+\",\"recommendWrap\":\"ProductsTable_recommendWrap__ZRMtE\",\"productRecommend\":\"ProductsTable_productRecommend__rAcms\",\"productNotRecommend\":\"ProductsTable_productNotRecommend__reFto\",\"trashValue\":\"ProductsTable_trashValue__YrW-N\",\"trashImg\":\"ProductsTable_trashImg__HTxxa\",\"nameTrash\":\"ProductsTable_nameTrash__tJVPK\",\"table\":\"ProductsTable_table__IpdJ7\",\"bodyTable\":\"ProductsTable_bodyTable__JWiA8\",\"diaryMainList\":\"ProductsTable_diaryMainList__bG8Dg\"};","import { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Icon from '../ComponIcon/Icon';\nimport css from './ProductsTable.module.css';\nimport { deleteProductDiary } from '../../redux/diary/diaryOperations';\nimport capitalizedWord from 'utils/capitalizedWord';\nimport PropTypes from 'prop-types';\n\nconst ProductsTable = ({products}) => {\n  const dispatch = useDispatch();\n\n  const deleteProduct = id => {\n    dispatch(deleteProductDiary(id));\n  };\n\n  return (\n    <ul className={css.diaryMainList}>\n      {products.map(\n        ({ _id, title, category, calories, amount, recommended }, i) => {\n          return (\n            <li key={nanoid()} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Title</th>\n                    <td className={css.nameValue}>{capitalizedWord(title)}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Category</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(category)}\n                    </td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Weight</th>\n                    <td className={css.nameValue}>{amount}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Recommend</th>\n                    <td className={css.nameValue}>\n                      <div className={`${css.recommendWrap}`}>\n                        <span\n                          className={\n                            recommended\n                              ? `${css.productRecommend}`\n                              : `${css.productNotRecommend}`\n                          }\n                        ></span>\n                        {recommended ? 'Yes' : 'No'}\n                      </div>\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td\n                      className={css.trashValue}\n                      onClick={() => {\n                        deleteProduct(_id);\n                      }}\n                    >\n                      <Icon className={css.trashImg} iconId={'Trash'} />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          );\n        }\n      )}\n    </ul>\n  );\n};\n\nProductsTable.propTypes = {\n  products: PropTypes.array.isRequired,\n};\n\nexport default ProductsTable;\n","import css from \"./DayProducts.module.css\";\nimport useDiary from \"../../hooks/useDiary\";\n\nimport { PRODUCT_ROUTE } from \"../../utils/const\";\nimport ButtonAddItem from \"../ButtonAddItem/ButtonAddItem\";\nimport ProductsTable from \"../ProductsTable/ProductsTable\";\nimport EmptyList from \"../EmptyList/EmptyList\";\n\nconst DayProducts = () => {\n\n  const { diaryProducts } = useDiary();\n  return (\n    <div className={css.dayProducts}>\n      <div className={css.dayScrollWrap}>\n        <div className={css.diaryNav}>\n          <h3 className={css.diarySubtitle}>Products</h3>\n          <ButtonAddItem titleLink=\"Add product\" titleRoute={PRODUCT_ROUTE} />\n        </div>\n        {diaryProducts.length === 0 ? (\n          <EmptyList listName={\"products\"} />\n        ) : (\n            <ProductsTable products={diaryProducts} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DayProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"daySwitch\":\"DaySwitch_daySwitch__Fv7Lz\",\"inputWrap\":\"DaySwitch_inputWrap__Ra4R+\",\"calendarInput\":\"DaySwitch_calendarInput__0uBnb\",\"calendarIcon\":\"DaySwitch_calendarIcon__LyIhh\",\"currentDate\":\"DaySwitch_currentDate__BhZlX\",\"chevronIconWrap\":\"DaySwitch_chevronIconWrap__ooP6n\",\"chevronIcon\":\"DaySwitch_chevronIcon__ih5GH\",\"chevronLeftIcon\":\"DaySwitch_chevronLeftIcon__E70xl\"};","import React, { useState, useEffect, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './DaySwitch.module.css';\n\nimport DatePicker from 'react-datepicker';\nimport useAuth from '../../hooks/useAuth';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport Icon from '../ComponIcon/Icon';\nimport DatePickerStyles from './DaySwitchCalendarStyle';\n\nconst CustomInput = forwardRef(\n  ({ value, onClick, onChange, onKeyDown }, ref) => {\n    const handleChange = e => {\n      onChange(e.target.value);\n    };\n\n    return (\n      <div>\n        <input\n          ref={ref}\n          className={css.calendarInput}\n          value={value}\n          onClick={e => {\n            onClick(e);\n          }}\n          onChange={handleChange}\n          onKeyDown={onKeyDown}\n          readOnly\n        />\n      </div>\n    );\n  }\n);\n\nconst DaySwitch = ({ handleDate }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [calendarOpen, setCalendarOpen] = useState(false);\n\n  const { user } = useAuth();\n  const userRegistrationDate = new Date(user.registrDate);\n\n  useEffect(() => {\n    handleDate(selectedDate);\n  }, [selectedDate, handleDate]);\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape' && calendarOpen) {\n      setCalendarOpen(false);\n    }\n  };\n\n  const handlePrevDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setHours(0, 0, 0, 0);\n    if (prevDate > userRegistrationDate) {\n      prevDate.setDate(prevDate.getDate() - 1);\n      setSelectedDate(prevDate);\n    }\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    if (nextDate <= new Date()) {\n      setSelectedDate(nextDate);\n    }\n  };\n\n  const handleCalendarChange = date => {\n    setSelectedDate(date);\n  };\n\n  const currentDayClassName = date => {\n    if (date.toDateString() === new Date().toDateString()) {\n      return `${css.currentDate}`;\n    }\n    return null;\n  };\n\n  const handleIconClick = () => {\n    const inputElement = document.querySelector(`.${css.calendarInput}`);\n    inputElement.click();\n  };\n\n  return (\n    <div>\n      <style>{DatePickerStyles}</style>\n      <div className={css.daySwitch}>\n        <div className={css.inputWrap} onClick={handleIconClick}>\n          <DatePicker\n            showYearDropdown\n            scrollableYearDropdown\n            yearDropdownItemNumber={100}\n            dateFormat=\"dd/MM/yyyy\"\n            selected={selectedDate}\n            onChange={handleCalendarChange}\n            onKeyDown={handleKeyDown}\n            minDate={userRegistrationDate}\n            maxDate={new Date()}\n            calendarClassName={css.customCalendar}\n            dayClassName={currentDayClassName}\n            customInput={<CustomInput />}\n            onClickOutside={() => setCalendarOpen(false)}\n          />\n          <div>\n            <Icon className={css.calendarIcon} iconId={'Calendar'} />\n          </div>\n        </div>\n        <div className={css.chevronIconWrap}>\n          <Icon\n            className={`${css.chevronIcon} ${css.chevronLeftIcon}`}\n            iconId={'Chevron'}\n            onClick={handlePrevDay}\n          />\n          <Icon\n            className={css.chevronIcon}\n            iconId={'Chevron'}\n            onClick={handleNextDay}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDaySwitch.propTypes = {\n  handleDate: PropTypes.func.isRequired,\n};\n\nexport default DaySwitch;\n","const DatePickerStyles = `\n  .react-datepicker__month-container{\n    border-radius: 8px;\n    background: #EF8964;\n  }\n  .react-datepicker__header {\n    background-color:  #EF8964;\n    color: #EFEDE8;\n  }\n    .react-datepicker__year-read-view{\n      display:none;\n    }\n  .react-datepicker__day-name{\n     color:rgba(239, 237, 232, 0.50);\n}\n.react-datepicker__day--disabled{\n  color:rgba(239, 237, 232, 0.50) !important;\n}\n\n.react-datepicker__day--disabled:hover{\n  background-color:inherit !important;\n}\n   .react-datepicker__current-month {\n     color:#EFEDE8;\n}\n.react-datepicker__day--selected{\n  border-radius: 50px;\n  background-color: black;\n}\n.react-datepicker__day {\n  color:#EFEDE8;\n}\n.react-datepicker__day:hover{\n background-color:black;\nborder-radius: 50px;\ntransition: all 150ms linear;\n}\n`;\n\nexport default DatePickerStyles;","import css from \"./DiaryPage.module.css\";\n\nimport TitlePage from \"../../components/TitlePage/TitlePage\";\n\nimport DayDashboard from \"../../components/DayDashboard/DayDashboard\";\nimport DayExercises from \"../../components/DayExercises/DayExercises\";\nimport DayProducts from \"../../components/DayProducts/DayProducts\";\nimport DaySwitch from \"../../components/DaySwitch/DaySwitch\";\n\nimport { useDispatch } from \"react-redux\";\nimport { fetchAllDiary } from \"../../redux/diary/diaryOperations\";\nimport { useEffect, useState } from \"react\";\nimport formatDate from \"../../utils/formatData\";\n\n\nconst DiaryPage = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  \n  useEffect(() => {\n    const fetchDate = () => {\n      if (selectedDate) {\n        const date = {\n          date: selectedDate,\n        };\n        dispatch(fetchAllDiary(date));\n      }\n    };\n    fetchDate();\n  }, [dispatch, selectedDate]);\n\n  const handleDate = async (date) => {\n    const formatedDate = formatDate(date);\n    await setSelectedDate(formatedDate);\n  };\n\n  return (\n    <div className={css.diaryPage}>\n      <div className={css.calendarWrap}>\n        <TitlePage title=\"Diary\" />\n        <div className={css.calendar}>\n          <DaySwitch handleDate={handleDate} />\n        </div>\n      </div>\n\n      <div className={css.sectionWrap}>\n        <DayDashboard />\n        <div>\n          <DayProducts />\n          <DayExercises />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryPage;\n","export const selectDiaryProducts = state => state.diary.diaryProducts;\nexport const selectDiaryExercises = state => state.diary.diaryExercises;\nexport const selectDiaryIsLoading = state => state.diary.isLoading;\nexport const selectDiaryError = state => state.diary.error;\n","const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n};\n\nexport default capitalizedWord;\n","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\nexport default formatDate;\n"],"names":["_ref","statisticsName","statisticsIcon","statisticsValue","statisticPrimary","_ref$fulfilledNorm","fulfilledNorm","_jsx","_Fragment","children","_jsxs","className","concat","css","Icon","iconId","TitlePage","title","motion","initial","opacity","animate","transition","duration","diaryProducts","useSelector","selectDiaryProducts","diaryExercises","selectDiaryExercises","diaryIsLoading","selectDiaryIsLoading","diaryError","selectDiaryError","_user$profileSettings","_user$profileSettings2","user","selectUser","products","execrcises","dailyCalorieIntake","profileSettings","bmr","caloriesConsumed","reduce","sum","product","calories","caloriesRemaining","caloriesBurned","execrcise","timeSport","time","dailyPhysicalActivity","sportsRemaining","Math","floor","_useStatistics","useStatistics","isCaloriesRemaining","isSportsRemaining","StatisticsItem","titleLink","titleRoute","NavLink","to","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","id","byte","toString","toUpperCase","exercises","dispatch","useDispatch","map","_ref2","_id","bodyPart","equipment","name","target","capitalizedWord","onClick","deleteExercisesDiary","deleteExercise","listName","useDiary","ButtonAddItem","EXERCISES_ROUTE","EmptyList","ExercisesTable","i","category","amount","recommended","deleteProductDiary","PRODUCT_ROUTE","ProductsTable","CustomInput","forwardRef","ref","value","onChange","onKeyDown","e","readOnly","handleDate","_useState","useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","calendarOpen","setCalendarOpen","useAuth","userRegistrationDate","registrDate","useEffect","document","querySelector","click","DatePicker","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","dateFormat","selected","date","event","key","minDate","maxDate","calendarClassName","dayClassName","toDateString","customInput","onClickOutside","prevDate","setHours","setDate","getDate","nextDate","fetchAllDiary","fetchDate","_asyncToGenerator","_regeneratorRuntime","_callee","formatedDate","_context","prev","next","formatDate","stop","_x","apply","DaySwitch","DayDashboard","DayProducts","DayExercises","state","diary","isLoading","error","word","substring","day","String","padStart","month","getMonth","year","getFullYear"],"sourceRoot":""}