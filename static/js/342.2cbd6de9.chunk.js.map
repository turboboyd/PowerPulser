{"version":3,"file":"static/js/342.2cbd6de9.chunk.js","mappings":"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","sources":["webpack://powerpulse/./src/components/StatisticsItem/StatisticsItem.module.css?626e","components/StatisticsItem/StatisticsItem.jsx","webpack://powerpulse/./src/components/TitlePage/TitlePage.module.css?5ae7","components/TitlePage/TitlePage.jsx","webpack://powerpulse/./src/components/UserForm/RadioButton/RadioButton.module.css?da7c","components/UserForm/RadioButton/RadioButton.jsx","webpack://powerpulse/./src/components/UserForm/ErrorMessages/ErrorMessages.module.css?955d","components/UserForm/ErrorMessages/ErrorMessages.jsx","components/СalendarBirthDay/СalendarBirthDay.module.css","components/СalendarBirthDay/СalendarBirthDay.jsx","components/СalendarBirthDay/DatePickerStyles.js","webpack://powerpulse/./src/components/UserForm/UserForm.module.css?24f4","components/UserForm/UserForm.jsx","webpack://powerpulse/./src/components/Avatar/Avatar.module.css?74bd","components/Avatar/Avatar.jsx","webpack://powerpulse/./src/components/UserCard/UserCard.module.css?416f","components/UserCard/UserCard.jsx","webpack://powerpulse/./src/pages/ProfilePage/ProfilePage.module.css?2c99","pages/ProfilePage/ProfilePage.jsx","utils/shemas/userFormShemas.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__ZAGsK\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__kw-pk\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__HJTjN\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__WSxqY\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__NRxuv\",\"statisticTitle\":\"StatisticsItem_statisticTitle__9-4pX\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__4BDlN\",\"statisticIcon\":\"StatisticsItem_statisticIcon__X8AOQ\",\"statisticValue\":\"StatisticsItem_statisticValue__qdzXl\"};","import css from './StatisticsItem.module.css';\nimport Icon from '../ComponIcon/Icon';\nimport PropTypes from 'prop-types';\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary,\n  fulfilledNorm = '',\n}) => {\n  return (\n    <>\n      <li\n        className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          fulfilledNorm !== '' && fulfilledNorm === 'positive'\n            ? css.statisticItemPositive\n            : fulfilledNorm !== '' && fulfilledNorm === 'negative'\n            ? css.statisticItemNegative\n            : ''\n        }`}\n      >\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\nStatisticsItem.propTypes = {\n  statisticsName: PropTypes.string.isRequired,\n  statisticsIcon: PropTypes.string.isRequired,\n  statisticsValue: PropTypes.string.isRequired,\n  statisticPrimary: PropTypes.bool,\n  fulfilledNorm: PropTypes.string,\n};\n\nexport default StatisticsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TitlePage_title__zyjBQ\"};","import css from './TitlePage.module.css';\nimport { motion } from 'framer-motion';\n\nexport default function TitlePage({ title }) {\n  return (\n    <div>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h1 className={css.title}>{title}</h1>\n      </motion.div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"radio\":\"RadioButton_radio__EypEe\",\"radioInput\":\"RadioButton_radioInput__w5BLD\",\"radioLabel\":\"RadioButton_radioLabel__Z4vDL\"};","import css from \"./RadioButton.module.css\";\n\nconst RadioOption = ({ id, name, value, checked, label, onChange }) => (\n  <div className={css.radio}>\n    <input\n      className={css.radioInput}\n      type=\"radio\"\n      id={id}\n      name={name}\n      value={value}\n      checked={checked}\n      onChange={onChange}\n    />\n\n    <label className={css.radioLabel} htmlFor={id}>\n      {label}\n    </label>\n  </div>\n);\n\nexport default RadioOption;\n","// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"ErrorMessages_errorMessage__rqIL-\"};","import { ErrorMessage } from \"formik\";\nimport css from \"./ErrorMessages.module.css\";\n\nconst ErrorMessages = ({nameField}) => {\n  return (\n    <>\n      <ErrorMessage className={css.errorMessage} name={nameField} component=\"div\" />\n    </>\n  );\n};\n\nexport default ErrorMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"datePicker\":\"СalendarBirthDay_datePicker__xnsJQ\",\"containerCalendar\":\"СalendarBirthDay_containerCalendar__SJw2I\",\"textCalendarError\":\"СalendarBirthDay_textCalendarError__e7qX4\",\"datePickerError\":\"СalendarBirthDay_datePickerError__h7D09\",\"customCalendar\":\"СalendarBirthDay_customCalendar__4sblh\",\"iconCalendar\":\"СalendarBirthDay_iconCalendar__uniMB\"};","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport React, { useState, forwardRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../redux/auth/authSelectors';\nimport Icon from '../ComponIcon/Icon';\nimport CalendarStyles from './СalendarBirthDay.module.css';\nimport DatePickerStyles from './DatePickerStyles';\n\nconst CustomInput = forwardRef(\n  ({ value, onClick, onChange, onKeyDown, error }, ref) => {\n    const handleChange = e => {\n      onChange(e.target.value);\n    };\n\n    return (\n      <div style={{ backgroundColor: 'black', color: 'white' }}>\n        <input\n          ref={ref}\n          className={`${CalendarStyles.datePicker} ${error && CalendarStyles.datePickerError}`}\n          value={value}\n          onClick={e => {\n            onClick();\n            onClick(e);\n          }}\n          onChange={handleChange}\n          onKeyDown={onKeyDown}\n          readOnly\n          style={{ backgroundColor: 'black', color: 'white' }}\n        />\n      </div>\n    );\n  }\n);\n\nconst CalendarComponent = ({ onBirthdayChange }) => {\n  const user = useSelector(selectUser);\n  const initialDate = user?.profileSettings?.birthday\n    ? new Date(user.profileSettings.birthday)\n    : new Date();\n  const [selectedDate, setSelectedDate] = useState(initialDate);\n  const [calendarOpen, setCalendarOpen] = useState(false);\n  const [validationError, setValidationError] = useState(null);\n\n  const toggleCalendar = () => {\n    setCalendarOpen(!calendarOpen);\n  };\n\n  const dayClassName = date => {\n    if (date.toDateString() === new Date().toDateString()) {\n      return `${CalendarStyles.currentDate}`;\n    }\n    return null;\n  };\n\n  const handleCalendarChange = date => {\n    const today = new Date();\n\n    if (today.getFullYear() - date.getFullYear() < 18) {\n      setValidationError('You must be at least 18 years old.');\n    } else {\n      setValidationError(null);\n      setSelectedDate(date);\n    }\n    onBirthdayChange(date);\n    toggleCalendar();\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      setCalendarOpen(false);\n    }\n  };\n  const handleIconClick = () => {\n    const inputElement = document.querySelector(\n      `.${CalendarStyles.datePicker}`\n    );\n    inputElement.click();\n  };\n\n  return (\n    <div>\n      <style>{DatePickerStyles}</style>\n      <div className={CalendarStyles.containerCalendar}>\n        <DatePicker\n          showYearDropdown\n          scrollableYearDropdown\n          yearDropdownItemNumber={100}\n          dateFormat=\"dd.MM.yyyy\"\n          selected={selectedDate}\n          onChange={handleCalendarChange}\n          onClickCapture={toggleCalendar}\n          maxDate={new Date()}\n          calendarClassName={CalendarStyles.customCalendar}\n          dayClassName={dayClassName}\n          customInput={<CustomInput onKeyDown={handleKeyDown} error={validationError} />}\n        />\n        <Icon\n          className={CalendarStyles.iconCalendar}\n          iconId=\"icon-calendar-white\"\n          onClick={handleIconClick}\n        />\n        {validationError && (\n          <div className={CalendarStyles.textCalendarError}>{validationError}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CalendarComponent;\n","const DatePickerStyles = `\n .react-datepicker__header {\n    background-color:  #EF8964;\n    color: #EFEDE8;\n  }\n  \n  .react-datepicker__year-option {\n    background-color:  #e6533c;\n    color: white;\n  }\n\n  .react-datepicker__year-dropdown {\n    margin-top: 0.25rem;\n    max-height: 20rem;\n  }\n\n   .react-datepicker__month-container{\n    border-radius: 8px;\n    background: #EF8964;\n  }\n  \n   \n  .react-datepicker__day-name{\n     color:rgba(239, 237, 232, 0.50);\n}\n\n\n.react-datepicker__day--disabled:hover{\n  background-color:inherit !important;\n}\n   .react-datepicker__current-month {\n     color:#EFEDE8;\n}\n.react-datepicker__day--selected{\n  border-radius: 50px;\n  background-color: black;\n}\n.react-datepicker__day {\n  color:#EFEDE8;\n}\n.react-datepicker__day:hover{\n background-color:black;\nborder-radius: 50px;\ntransition: all 150ms linear;\n}\n`;\n\nexport default DatePickerStyles;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"UserForm_formWrapper__JaDbg\",\"titleName\":\"UserForm_titleName__mlZUd\",\"inputContainer\":\"UserForm_inputContainer__ONhX9\",\"labelInput\":\"UserForm_labelInput__oqalT\",\"topFieldWrapper\":\"UserForm_topFieldWrapper__81VJx\",\"radioBloodContainer\":\"UserForm_radioBloodContainer__1R4Mc\",\"levelActivityWrapper\":\"UserForm_levelActivityWrapper__C5Zpu\",\"formContainer\":\"UserForm_formContainer__L37wJ\",\"input\":\"UserForm_input__qGgJS\",\"radioWrapper\":\"UserForm_radioWrapper__d4VqI\",\"inputEmail\":\"UserForm_inputEmail__OcZEo\",\"error\":\"UserForm_error__U5MYa\",\"inputWrapper\":\"UserForm_inputWrapper__DeOXH\",\"fieldContainer\":\"UserForm_fieldContainer__0Iy7g\",\"field\":\"UserForm_field__q4Q+y\",\"radioContainer\":\"UserForm_radioContainer__d43aJ\",\"radioSexContainer\":\"UserForm_radioSexContainer__5bygo\",\"levelInput\":\"UserForm_levelInput__bErWt\",\"buttonSave\":\"UserForm_buttonSave__vXMtE\"};","import { Formik, Field, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button/Button';\nimport RadioButton from './RadioButton/RadioButton';\nimport ErrorMessages from './ErrorMessages/ErrorMessages';\nimport CalendarComponent from '../СalendarBirthDay/СalendarBirthDay';\n\nimport userFormShemas from '../../utils/shemas/userFormShemas';\nimport { updateProfileSettings } from '../../redux/auth/authOperation';\nimport useAuth from '../../hooks/useAuth';\n\nimport css from './UserForm.module.css';\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  const { name, profileSettings, isLoading } = user;\n  const {\n    height = 0,\n    currentWeight = 0,\n    desiredWeight = 0,\n    blood = 0,\n    sex = '',\n    levelActivity = 0,\n  } = profileSettings || {};\n\n  const birthdayDate = profileSettings\n    ? new Date(profileSettings.birthday)\n    : new Date('2022-01-01');\n\n  const formattedBirthday = `${birthdayDate.getFullYear()}-${String(\n    birthdayDate.getMonth() + 1\n  ).padStart(2, '0')}-${String(birthdayDate.getDate()).padStart(2, '0')}`;\n\n  const initialValues = {\n    name,\n    height,\n    email: user.email,\n    currentWeight,\n    desiredWeight,\n    birthday: formattedBirthday,\n    blood,\n    sex: sex.toString(),\n    levelActivity,\n  };\n\n  const handleSubmit = values => {\n    const data = {\n      name: values.name,\n      profileSettings: {\n        height: values.height,\n        currentWeight: values.currentWeight,\n        desiredWeight: values.desiredWeight,\n        birthday: new Date(values.birthday).toISOString(),\n        blood: values.blood,\n        sex: values.sex,\n        levelActivity: values.levelActivity,\n      },\n    };\n    dispatch(updateProfileSettings(data));\n  };\n\n  return (\n    <div className={css.formContainer}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={userFormShemas}\n        onSubmit={handleSubmit}\n      >\n        {formik => (\n          <Form>\n            <div className={`${css.formWrapper} ${formik.touched['name'] && formik.errors['name'] && `${css.error}`}` }>\n              {/* <p className={css.titleName}>Basic info</p> */}\n              <div className={css.topFieldWrapper}>\n                <label className={css.labelInput} htmlFor=\"name\">Name</label>\n                <Field\n                  className={css.input}\n                  name=\"name\"\n                  type=\"text\"\n                  id=\"name\"\n                  placeholder=\"Your name\"\n                />\n                 <ErrorMessages nameField=\"name\"/>\n              </div>\n              <div className={css.topFieldWrapper}>\n                <label className={css.labelInput} htmlFor=\"email\">Email</label>\n                <Field\n                  className={`${css.input} ${css.inputEmail}`}\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  readOnly\n                  disabled\n                />\n              </div>\n            </div>\n            <div className={css.inputContainer}>\n              <div className={css.inputWrapper}>\n                <div className={`${css.fieldContainer} ${formik.touched['height'] && formik.errors['height'] && `${css.error}`}`}>\n                  <label className={css.labelInput} htmlFor=\"height\">\n                    Height\n                  </label>\n                  <Field\n                    className={css.field}\n                    type=\"number\"\n                    name=\"height\"\n                    id=\"height\"\n                    placeholder=\"\"\n                  />\n                 <ErrorMessages nameField=\"height\"/>\n                </div>\n\n                <div className={`${css.fieldContainer} ${formik.touched['currentWeight'] && formik.errors['currentWeight'] && `${css.error}`}`}>\n                  <label className={css.labelInput} htmlFor=\"currentWeight\">\n                    Current Weight\n                  </label>\n                  <Field\n                    className={css.field}\n                    type=\"number\"\n                    name=\"currentWeight\"\n                    id=\"currentWeight\"\n                    placeholder=\"\"\n                  />\n                 <ErrorMessages nameField=\"currentWeight\"/>\n                </div>\n              </div>\n\n              <div className={css.inputWrapper}>\n                <div className={`${css.fieldContainer} ${formik.touched['desiredWeight'] && formik.errors['desiredWeight'] && `${css.error}`}`}>\n                  <label className={css.labelInput} htmlFor=\"desiredWeight\">\n                    Desired Weight\n                  </label>\n                  <Field\n                    className={css.field}\n                    type=\"number\"\n                    name=\"desiredWeight\"\n                    id=\"desiredWeight\"\n                    placeholder=\"\"\n                  />\n                 <ErrorMessages nameField=\"desiredWeight\"/>\n                </div>\n\n                <div\n                  className={css.fieldContainer}\n                  style={{ position: 'relative' }}\n                >\n                  <label className={css.labelInput} htmlFor=\"birthday\">Birthday</label>\n                  <CalendarComponent\n                    minDate={new Date('1900-01-01')}\n                    selected={formik.values.birthday}\n                    onBirthdayChange={date =>\n                      formik.setFieldValue('birthday', date)\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n            <p className={`${css.titleName} ${css.titleBlood}`}>Blood</p>\n            <div className={css.radioWrapper}>\n              <div className={css.radioContainer}>\n                <div className={css.radioBloodContainer}>\n                  <RadioButton\n                    name=\"blood\"\n                    value={1}\n                    id=\"1\"\n                    label=\"1\"\n                    checked={formik.values.blood === 1}\n                    onChange={() => formik.setFieldValue('blood', 1)}\n                  />\n\n                  <RadioButton\n                    name=\"blood\"\n                    value={2}\n                    id=\"2\"\n                    label=\"2\"\n                    checked={formik.values.blood === 2}\n                    onChange={() => formik.setFieldValue('blood', 2)}\n                  />\n\n                  <RadioButton\n                    name=\"blood\"\n                    value={3}\n                    id=\"3\"\n                    label=\"3\"\n                    checked={formik.values.blood === 3}\n                    onChange={() => formik.setFieldValue('blood', 3)}\n                  />\n\n                  <RadioButton\n                    name=\"blood\"\n                    value={4}\n                    id=\"4\"\n                    label=\"4\"\n                    checked={formik.values.blood === 4}\n                    onChange={() => formik.setFieldValue('blood', 4)}\n                  />\n                </div>\n                <div className={css.radioSexContainer}>\n                  <RadioButton\n                    name=\"sex\"\n                    id=\"male\"\n                    value=\"male\"\n                    label=\"Male\"\n                    checked={formik.values.sex === 'male'}\n                    onChange={() => formik.setFieldValue('sex', 'male')}\n                  />\n                  <RadioButton\n                    name=\"sex\"\n                    id=\"female\"\n                    value=\"female\"\n                    label=\"Female\"\n                    checked={formik.values.sex === 'female'}\n                    onChange={() => formik.setFieldValue('sex', 'female')}\n                  />\n                </div>\n              </div>\n              {/* levelActively */}\n              <div className={css.levelActivityWrapper}>\n                <RadioButton\n                  name=\"levelActivity\"\n                  id=\"levelActivity1\"\n                  value={1}\n                  label=\"Sedentary lifestyle (little or no physical activity)\"\n                  checked={formik.values.levelActivity === 1}\n                  onChange={() => formik.setFieldValue('levelActivity', 1)}\n                />\n                <RadioButton\n                  className={css.levelInput}\n                  name=\"levelActivity\"\n                  value={2}\n                  id=\"levelActivity2\"\n                  label=\"Light activity (light exercises/sports 1-3 days per week)\"\n                  checked={formik.values.levelActivity === 2}\n                  onChange={() => formik.setFieldValue('levelActivity', 2)}\n                />\n                <RadioButton\n                  name=\"levelActivity\"\n                  value={3}\n                  id=\"levelActivity3\"\n                  label=\"Moderately active (moderate exercises/sports 3-5 days per week)\"\n                  checked={formik.values.levelActivity === 3}\n                  onChange={() => formik.setFieldValue('levelActivity', 3)}\n                />\n                <RadioButton\n                  name=\"levelActivity\"\n                  value={4}\n                  id=\"levelActivity4\"\n                  label=\"Very active (intense exercises/sports 6-7 days per week)\"\n                  checked={formik.values.levelActivity === 4}\n                  onChange={() => formik.setFieldValue('levelActivity', 4)}\n                />\n                <RadioButton\n                  name=\"levelActivity\"\n                  value={5}\n                  id=\"levelActivity5\"\n                  label=\"Extremely active (very strenuous exercises/sports and physical\n                work)\"\n                  checked={formik.values.levelActivity === 5}\n                  onChange={() => formik.setFieldValue('levelActivity', 5)}\n                />\n              </div>\n            </div>\n            <Button\n              className={css.buttonSave}\n              type=\"submit\"\n              text=\"Save\"\n              disabled={\n                isLoading ||\n                !formik.isValid ||\n                !formik.dirty ||\n                !formik.values.blood ||\n                !formik.values.sex ||\n                !formik.values.levelActivity\n              }\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserForm;\n\nUserForm.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    profileSettings: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      currentWeight: PropTypes.number.isRequired,\n      desiredWeight: PropTypes.number.isRequired,\n      birthday: PropTypes.string.isRequired,\n      blood: PropTypes.number.isRequired,\n      sex: PropTypes.string.isRequired,\n      levelActivity: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"avatarWrapper\":\"Avatar_avatarWrapper__HGshb\",\"avatar\":\"Avatar_avatar__Uauly\",\"iconAvatar\":\"Avatar_iconAvatar__BvS-l\",\"iconUpload\":\"Avatar_iconUpload__sGakc\",\"textUserName\":\"Avatar_textUserName__hs91K\",\"textUser\":\"Avatar_textUser__uhr9y\"};","import { useDispatch } from 'react-redux';\n\nimport Icon from '../ComponIcon/Icon';\n\nimport { uploadAvatar } from '../../redux/avatar/avatarOperations';\nimport { setAvatarURL } from '../../redux/auth/authSlice';\n\nimport css from './Avatar.module.css';\n\nconst Avatar = ({ name, avatarURL }) => {\n  const dispatch = useDispatch();\n\n  const userAvatar = (\n    <img\n      src={avatarURL}\n      alt=\"Avatar\"\n      style={{ borderRadius: '100%', width: '100%', height: '100%' }}\n    />\n  );\n  const avatarLogo = <Icon className={css.iconAvatar} iconId={'icon-avatar'} />;\n\n  const handleChangeAvatar = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const blob = new Blob([file]);\n      const objectURL = URL.createObjectURL(blob);\n      dispatch(setAvatarURL(objectURL));\n    }\n\n    dispatch(uploadAvatar(file));\n  };\n\n  return (\n    <>\n      <div className={css.avatarWrapper}>\n        <div className={css.avatar}>{avatarURL ? userAvatar : avatarLogo}</div>\n        <form className={css.form}>\n          <input\n            type=\"file\"\n            name=\"file\"\n            id=\"inputFile\"\n            style={{ display: 'none' }}\n            onChange={handleChangeAvatar}\n          />\n          <label htmlFor=\"inputFile\" style={{ cursor: 'pointer' }}>\n            <Icon className={css.iconUpload} iconId={'icon-add-avatar'} />\n          </label>\n        </form>\n        <p className={css.textUserName}>{name}</p>\n        <p className={css.textUser}>User</p>\n      </div>\n    </>\n  );\n};\nexport default Avatar;\n","// extracted by mini-css-extract-plugin\nexport default {\"avatarWrapper\":\"UserCard_avatarWrapper__bexJ0\",\"statisticsWrapper\":\"UserCard_statisticsWrapper__EkmxP\",\"iconWarning\":\"UserCard_iconWarning__5HgWQ\",\"warningWrap\":\"UserCard_warningWrap__mgW8-\",\"warningText\":\"UserCard_warningText__A0XkK\",\"svg_logout\":\"UserCard_svg_logout__zlr+k\",\"logout\":\"UserCard_logout__tfrFI\"};","import { useNavigate } from \"react-router-dom\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport Avatar from \"../Avatar/Avatar\";\nimport StatisticsItem from \"../StatisticsItem/StatisticsItem\";\nimport Icon from \"../ComponIcon/Icon\";\n\nimport { logOutUser } from \"../../redux/auth/authOperation\";\n\nimport css from \"./UserCard.module.css\";\n\nconst UserCard = ({ user }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { name, avatarURL, profileSettings } = user;\n\n  const dailyCalorieIntake =\n    user && profileSettings ? profileSettings.bmr || 0 : 0;\n  const handleLogout = useCallback(() => {\n    dispatch(logOutUser());\n    navigate(\"/\");\n  }, [dispatch, navigate]);\n\n  return (\n    <>\n      <div className={css.avatarWrapper}>\n        <Avatar name={name} avatarURL={avatarURL} />\n        <div className={css.statisticsWrapper}>\n          <StatisticsItem\n            className={css.statistics}\n            statisticsName={\"Daily calorie intake\"}\n            statisticsValue={`${dailyCalorieIntake}`}\n            statisticsIcon={\"Fluent_food\"}\n            statisticPrimary={true}\n          />\n          <StatisticsItem\n            statisticsName={\"Daily norm of sports\"}\n            statisticsValue={\"110 min\"}\n            statisticsIcon={\"Dumbbell\"}\n            statisticPrimary={true}\n          />\n        </div>\n        <div className={css.warningWrap}>\n          <Icon className={css.iconWarning} iconId={\"icon-warning\"} />\n\n          <p className={css.warningText}>\n            We understand that each individual is unique, so the entire approach\n            to diet is relative and tailored to your unique body and goals.\n          </p>\n        </div>\n        <button onClick={handleLogout} to=\"/\" className={css.logout}>\n          Logout <Icon className={css.svg_logout} iconId=\"Log-out\" />\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default UserCard;\n\nUserCard.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    profileSettings: PropTypes.shape({\n      bmr: PropTypes.number,\n    }).isRequired,\n    avatarURL: PropTypes.string,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ProfilePage_section__TaRyA\",\"title\":\"ProfilePage_title__qrAwv\",\"container\":\"ProfilePage_container__HAlWm\"};","import { useEffect, useState } from 'react';\n\nimport TitlePage from '../../components/TitlePage/TitlePage';\nimport UserForm from '../../components/UserForm/UserForm';\nimport UserCard from '../../components/UserCard/UserCard';\n\nimport useAuth from '../../hooks/useAuth';\nimport css from './ProfilePage.module.css';\n\nconst ProfilePage = () => {\n  const { user } = useAuth();\n  const avatar = user.avatarURL;\n  const [, setAvatarURL] = useState(avatar);\n\n  useEffect(() => {\n    setAvatarURL(avatar);\n  }, [avatar]);\n\n  return (\n    <>\n      <TitlePage title=\"Profile Settings\" className={css.title} />\n      <div className={css.container}>\n        <UserForm user={user} />\n        <UserCard user={user} />\n      </div>\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import * as yup from 'yup';\n\nconst eighteenYearsAgo = new Date();\neighteenYearsAgo.setFullYear(eighteenYearsAgo.getFullYear() - 18);\n\nconst userFormShemas = yup.object({\n  name: yup.string().matches(/^\\S.*\\S$/, \"Leading and trailing spaces are not allowed\").required('Name is required'),\n  height: yup\n    .number('Number')\n    .typeError('Must be a number')\n    .positive('Must be positive.')\n    .min(150, 'Height must be at least 150cm')\n    .max(250, 'Height must be at most 250cm')\n    .required('Height is required'),\n  currentWeight: yup\n    .number()\n    .typeError('Must be a number')\n    .positive('Must be positive.')\n    .min(35, 'Current weight must be at least 35kg')\n    .max(200, 'Current weight must be at most 200kg')\n    .required('Current weight is required'),\n  desiredWeight: yup\n    .number()\n    .typeError('Must be a number')\n    .positive('Must be positive.')\n    .min(35, 'Desired weight must be at least 35kg')\n    .max(200, 'Desired weight must be at most 200kg')\n    .required('Desired weight is required'),\n  birthday: yup\n    .date()\n    .max(eighteenYearsAgo, 'Birthday must be in the past')\n    .min(new Date('1900-01-01'), 'Birthday must be after 1900-01-01')\n    .required('Birthday is required'),\n});\n\nexport default userFormShemas;\n"],"names":["_ref","statisticsName","statisticsIcon","statisticsValue","statisticPrimary","_ref$fulfilledNorm","fulfilledNorm","_jsx","_Fragment","children","_jsxs","className","concat","css","Icon","iconId","TitlePage","title","motion","initial","opacity","animate","transition","duration","id","name","value","checked","label","onChange","type","htmlFor","nameField","ErrorMessage","component","CustomInput","forwardRef","ref","onClick","onKeyDown","error","style","backgroundColor","color","CalendarStyles","e","target","readOnly","_ref2","_user$profileSettings","onBirthdayChange","user","useSelector","selectUser","initialDate","profileSettings","birthday","Date","_useState","useState","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","calendarOpen","setCalendarOpen","_useState5","_useState6","validationError","setValidationError","toggleCalendar","DatePicker","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","dateFormat","selected","date","getFullYear","onClickCapture","maxDate","calendarClassName","dayClassName","toDateString","customInput","event","key","document","querySelector","click","dispatch","useDispatch","useAuth","isLoading","_ref$height","height","_ref$currentWeight","currentWeight","_ref$desiredWeight","desiredWeight","_ref$blood","blood","_ref$sex","sex","_ref$levelActivity","levelActivity","birthdayDate","formattedBirthday","String","getMonth","padStart","getDate","initialValues","email","toString","Formik","validationSchema","userFormShemas","onSubmit","values","data","toISOString","updateProfileSettings","formik","Form","touched","errors","Field","placeholder","ErrorMessages","disabled","position","CalendarComponent","minDate","setFieldValue","RadioButton","Button","text","isValid","dirty","avatarURL","userAvatar","src","alt","borderRadius","width","avatarLogo","display","file","files","blob","Blob","objectURL","URL","createObjectURL","setAvatarURL","uploadAvatar","cursor","navigate","useNavigate","dailyCalorieIntake","bmr","handleLogout","useCallback","logOutUser","Avatar","StatisticsItem","to","avatar","useEffect","UserForm","UserCard","eighteenYearsAgo","setFullYear","yup","matches","required","typeError","positive","min","max"],"sourceRoot":""}