{"version":3,"file":"static/js/800.8f156b2f.chunk.js","mappings":"uKACA,MAAgC,sCAAhC,EAA8F,8CAA9F,EAAoK,8CAApK,EAAyO,6CAAzO,EAA2S,2CAA3S,EAAuW,uCAAvW,EAAsa,8CAAta,EAAoe,sCAApe,EAA2hB,uC,mBCsC3hB,EApCuB,SAAHA,GAMb,IALLC,EAAcD,EAAdC,eACAC,EAAcF,EAAdE,eACAC,EAAeH,EAAfG,gBAAeC,EAAAJ,EACfK,iBAAAA,OAAgB,IAAAD,EAAG,GAAEA,EAAAE,EAAAN,EACrBO,gBAAAA,OAAe,IAAAD,EAAG,GAAEA,EAEpB,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,MACEC,UAAS,GAAAC,OAAKC,EAAiB,KAAAD,OAC7BR,GAAoBS,EAAwB,KAAAD,OAExB,KAApBN,GAA0BA,EACtBO,EACoB,KAApBP,GAA2BA,EAE3B,GADAO,GAEHJ,SAAA,EAEHC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAuBJ,SAAA,EACrCF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACH,UAAWE,EAAmBE,OAAQd,KAC5CM,EAAAA,EAAAA,KAAA,KACEI,UAAS,GAAAC,OAAKC,EAAkB,KAAAD,OAC9BR,GAAoBS,GACnBJ,SAEFT,QAGLO,EAAAA,EAAAA,KAAA,OAAKI,UAAWE,EAAmBJ,SAAEP,QAI7C,C,uDCpCA,MAAwB,yB,UCCT,SAASc,EAASjB,GAAa,IAAVkB,EAAKlB,EAALkB,MAClC,OAAOV,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAUJ,SAAEQ,GACpC,C,+CCaA,IAdiB,WAMb,MAAO,CACHC,eANkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAO9BC,gBANmBF,EAAAA,EAAAA,IAAYG,EAAAA,IAO/BC,gBANmBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAO/BC,YANeN,EAAAA,EAAAA,IAAYO,EAAAA,IAQnC,C,+GCdA,EAA4B,6BAA5B,EAAwE,gCAAxE,EAAmH,4BAAnH,EAA6J,+B,UCA7J,EAA+B,mCAA/B,EAAkF,oCAAlF,EAAmI,iCAAnI,EAAqL,qCAArL,EAA4O,sCAA5O,EAA+R,iC,iDC+B/R,EAzBsB,WAAO,IAADC,EAAAC,EACpBC,GAAOV,EAAAA,EAAAA,IAAYW,EAAAA,IACnBC,GAAWZ,EAAAA,EAAAA,IAAYC,EAAAA,IAGvBY,EAA8C,QAA5BL,EAAuB,QAAvBC,EAAGC,EAAKI,uBAAe,IAAAL,OAAA,EAApBA,EAAsBM,WAAG,IAAAP,EAAAA,EAAI,IAClDQ,EAAmBJ,EAASK,QAChC,SAACC,EAAKC,GAAO,OAAKD,EAAMC,EAAQC,QAAQ,GACxC,GAOF,MAAO,CACLP,mBAAAA,EACAG,iBAAAA,EACAK,kBARwBR,EAAqBG,EAS7CM,sBAR4B,IAS5BC,eARqB,IASrBC,gBARsB,GAU1B,E,UCgDA,EAvEqB,WACnB,IAAAC,EAOIC,IANFb,EAAkBY,EAAlBZ,mBACAG,EAAgBS,EAAhBT,iBACAK,EAAiBI,EAAjBJ,kBACAC,EAAqBG,EAArBH,sBACAC,EAAcE,EAAdF,eACAC,EAAeC,EAAfD,gBAGIG,EAAsBX,EAAmBH,EACzCe,EAAoBJ,EAAkB,EAE5C,OACEjC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAiBJ,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAkBJ,SAAA,EAC/BF,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,CACbhD,eAAgB,uBAChBE,gBAAiB8B,EACjB/B,eAAgB,cAChBG,kBAAgB,KAElBG,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,CACbhD,eAAgB,0BAChBE,gBAAe,GAAAU,OAAK6B,EAAqB,QACzCxC,eAAgB,WAChBG,kBAAgB,KAElBG,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,CACbhD,eAAgB,yBAChBE,gBAAiBiC,EACjBlC,eAAgB,WAElBM,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,CACbhD,eAAgB,uBAChBE,gBAAiBwC,EACjBzC,eAAgB,cAElBM,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,CACbhD,eAAgB,qBAChBE,gBAAiBsC,EACjBvC,eAAgB,SAChBK,gBAAiBwC,KAEnBvC,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,CACbhD,eAAgB,mBAChBE,gBACE6C,EAAiB,IAAAnC,OACT+B,EAAe,WAAA/B,OAChB+B,EAAe,QAExB1C,eAAgB,SAChBK,gBAAiByC,QAGrBrC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAeJ,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKI,UAAWE,EAAmBJ,UACjCF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CACHH,UAAWE,EACXE,OAAQ,+BAGZR,EAAAA,EAAAA,KAAA,KAAGI,UAAWE,EAAeJ,SAAC,wIAOtC,EC3EA,EAAgC,oCAAhC,EAAoF,oCAApF,EAAmI,+BAAnI,EAAkL,oC,wCCAlL,EAAgC,qCAAhC,EAAsF,sCAAtF,EAA2I,oCCe3I,EAXsB,SAAHV,GAAmC,IAA7BkD,EAASlD,EAATkD,UAAWC,EAAUnD,EAAVmD,WAClC,OACE3C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACyC,EAAAA,GAAO,CAACxC,UAAWE,EAAmBuC,GAAIF,EAAWzC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,KAAGI,UAAWE,EAAmBJ,SAAEwC,KACnC1C,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACH,UAAWE,EAAkBE,OAAQ,cAInD,ECbA,GAAgB,cAAgB,sCAAsC,MAAQ,8BAA8B,QAAU,gCAAgC,YAAc,oCAAoC,aAAe,qCAAqC,UAAY,kCAAkC,SAAW,iCAAiC,UAAY,kCAAkC,UAAY,kCAAkC,cAAgB,uC,UC6Elc,EAxEuB,SAAHhB,GAAwB,IAAlBsD,EAAUtD,EAAVsD,WAClBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEhD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,cAAkBJ,SAC9B4C,EAAWG,KACV,SAAAC,GAAA,IACEC,EAAGD,EAAHC,IACAC,EAAQF,EAARE,SACAC,EAASH,EAATG,UACAC,EAAIJ,EAAJI,KACAC,EAAML,EAANK,OACAC,EAAcN,EAAdM,eACAC,EAAIP,EAAJO,KAAI,OAEJzD,EAAAA,EAAAA,KAAA,MAAcI,UAAWE,EAAAA,cAAkBJ,UACzCC,EAAAA,EAAAA,MAAA,SAAOC,UAAWE,EAAAA,MAAUJ,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,SAAOC,UAAWE,EAAAA,UAAcJ,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAAA,QAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,aAAiBJ,SAAC,eACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,UAAcJ,SAAEkD,QAEjCjD,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAAA,QAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,aAAiBJ,SAAC,eACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,UAAcJ,SAAEmD,QAEjClD,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAAA,QAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,aAAiBJ,SAAC,UACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,UAAcJ,SAAEoD,WAGnCnD,EAAAA,EAAAA,MAAA,SAAOC,UAAWE,EAAAA,YAAgBJ,SAAA,EAChCC,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAAA,QAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,aAAiBJ,SAAC,YACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,UAAcJ,SAAEqD,QAEjCpD,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAAA,QAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,aAAiBJ,SAAC,qBACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,UAAcJ,SAAEsD,QAEjCrD,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAAA,QAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,aAAiBJ,SAAC,UACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAAA,UAAcJ,SAAEuD,QAEjCtD,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAAA,QAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAS,GAAAC,OAAKC,EAAAA,aAAgB,KAAAD,OAAIC,EAAAA,WAAgBJ,SAAC,WAGvDF,EAAAA,EAAAA,KAAA,MACEI,UAAWE,EAAAA,WACXoD,QAAS,WApDN,IAACC,EAqDFZ,GArDEY,EAqDsBR,OApD5CJ,GAASa,EAAAA,EAAAA,IAAqBD,KAqDZ,EAAEzD,UAEFF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACH,UAAWE,EAAAA,SAAcE,OAAQ,sBAvCxC2C,EA4CJ,OAMjB,EC3EA,EAAuC,wCAAvC,EAAkG,oCCSlG,EARkB,SAAH3D,GAAsB,IAAhBqE,EAAQrE,EAARqE,SACnB,OACE7D,EAAAA,EAAAA,KAAA,OAAKI,UAAWE,EAAyBJ,UACvCC,EAAAA,EAAAA,MAAA,KAAGC,UAAWE,EAAqBJ,SAAA,CAAC,aAAW2D,MAGrD,ECyBA,EAzBqB,WACnB,IAAQ/C,GAAmBgD,EAAAA,EAAAA,KAAnBhD,eAER,OACEd,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAWE,EAAkBJ,UAChCC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAkBJ,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAaJ,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAkBJ,SAAC,gBAClCF,EAAAA,EAAAA,KAAC+D,EAAa,CACZrB,UAAU,eACVC,WAAYqB,EAAAA,QAGW,IAA1BlD,EAAemD,QACdjE,EAAAA,EAAAA,KAACkE,EAAS,CAACL,SAAU,eAErB7D,EAAAA,EAAAA,KAACmE,EAAc,CAACrB,WAAYhC,UAMxC,EC9BA,EAA8B,iCAA9B,EAA+E,mCAA/E,EAA6H,8BAA7H,EAA2K,mCCA3K,EAAgC,qCAAhC,EAA+E,+BAA/E,EAA4H,mCAA5H,EAA8K,oCAA9K,EAA8N,iCAA9N,GAA+Q,qCAA/Q,GAAuU,wCAAvU,GAAqY,2CAArY,GAA6b,kCAA7b,GAA0e,gCAA1e,GAAshB,iCAAthB,GAA+jB,6BAA/jB,GAAwmB,iCAAxmB,GAAypB,qCC0EzpB,GAtEsB,SAAHtB,GAAsB,IAAhBgC,EAAQhC,EAARgC,SACjBuB,GAAWC,EAAAA,EAAAA,MAMjB,OACEhD,EAAAA,EAAAA,KAAA,MAAII,UAAWE,GAAkBJ,SAC9BsB,EAASyB,KACR,SAAAC,EAAyDkB,GAAO,IAA9DjB,EAAGD,EAAHC,IAAKzC,EAAKwC,EAALxC,MAAO2D,EAAQnB,EAARmB,SAAUrC,EAAQkB,EAARlB,SAAUsC,EAAMpB,EAANoB,OAAQC,EAAWrB,EAAXqB,YACxC,OACAvE,EAAAA,EAAAA,KAAA,MAAcI,UAAWE,EAAkBJ,UACzCC,EAAAA,EAAAA,MAAA,SAAOC,UAAWE,GAAUJ,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,SAAOC,UAAWE,GAAcJ,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAiBJ,SAAC,WACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAcJ,SAAEQ,QAEjCP,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAiBJ,SAAC,cACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAcJ,SAAEmE,WAGnClE,EAAAA,EAAAA,MAAA,SAAOC,UAAWE,EAAgBJ,SAAA,EAChCC,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAiBJ,SAAC,cACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAcJ,SAAE8B,QAEjC7B,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAiBJ,SAAC,YACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAcJ,SAAEoE,QAEjCnE,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAiBJ,SAAC,eACjCF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAcJ,UAC3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAoBJ,SAAA,EACrCF,EAAAA,EAAAA,KAAA,QACEI,UACa,GAAAC,OAAXkE,EACOjE,GACAA,MAGViE,EAAc,MAAQ,cAI7BpE,EAAAA,EAAAA,MAAA,MAAIC,UAAWE,EAAYJ,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAII,UAAS,GAAAC,OAAKC,EAAgB,KAAAD,OAAIC,IAAgBJ,SAAC,WAGvDF,EAAAA,EAAAA,KAAA,MACEI,UAAWE,GACXoD,QAAS,YAnDL,SAACP,GACrBJ,GAASyB,EAAAA,EAAAA,IAAmBrB,GAC9B,CAkDoBsB,CAActB,EAChB,EAAEjD,UAEFF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACH,UAAWE,GAAcE,OAAQ,sBA9CxC2C,EAoDV,KAIT,EC5CA,GApBoB,WAClB,IAAQxC,GAAkBmD,EAAAA,EAAAA,KAAlBnD,cAER,OACEX,EAAAA,EAAAA,KAAA,OAAKI,UAAWE,EAAgBJ,UAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAkBJ,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAaJ,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAII,UAAWE,EAAkBJ,SAAC,cAClCF,EAAAA,EAAAA,KAAC+D,EAAa,CAACrB,UAAU,cAAcC,WAAY+B,EAAAA,QAE3B,IAAzB/D,EAAcsD,QACbjE,EAAAA,EAAAA,KAACkE,EAAS,CAACL,SAAU,cAErB7D,EAAAA,EAAAA,KAAC2E,GAAa,CAACnD,SAAUb,QAKnC,EC1BA,IAAgB,UAAY,6BAA6B,UAAY,6BAA6B,cAAgB,iCAAiC,aAAe,gCAAgC,YAAc,+BAA+B,gBAAkB,mCAAmC,YAAc,+BAA+B,gBAAkB,oC,iCCS7ViE,I,SAAcC,EAAAA,EAAAA,aAClB,SAAArF,EAA0CsF,GAAS,IAAhDC,EAAKvF,EAALuF,MAAOrB,EAAOlE,EAAPkE,QAASsB,EAAQxF,EAARwF,SAAUC,EAASzF,EAATyF,UAK3B,OACEjF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,SACE8E,IAAKA,EACL1E,UAAWE,GAAAA,cACXyE,MAAOA,EACPrB,QAAS,SAACwB,GAERxB,EAAQwB,EACV,EACAF,SAde,SAACE,GACpBF,EAASE,EAAE3B,OAAOwB,MACpB,EAaME,UAAWA,EACXE,UAAQ,KAIhB,KAwGF,GArGkB,SAAHjC,GAAwB,IAAlBkC,EAAUlC,EAAVkC,WACnBC,GAAwCC,EAAAA,EAAAA,UAAS,IAAIC,MAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAArDK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwCN,EAAAA,EAAAA,WAAS,GAAMO,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE5BvE,GAAS0E,EAAAA,GAAAA,KAAT1E,KACF2E,EAAuB,IAAIV,KAAKjE,EAAK4E,cAE3CC,EAAAA,EAAAA,YAAU,WACRf,EAAWM,EACb,GAAG,CAACA,EAAcN,IAElB,IAuBMgB,EAAiB,SAAClB,GACtBa,GAAiBD,EACnB,EAmBA,OACE3F,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAAE,SC5FgB,mzBD6FhBC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,GAAAA,UAAcJ,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,GAAAA,UAAeoD,QAAS0C,EAAelG,SAAA,EACrDF,EAAAA,EAAAA,KAACqG,KAAU,CACTC,kBAAgB,EAChBC,wBAAsB,EACtBC,uBAAwB,IACxBC,WAAW,aACXC,SAAUhB,EACVV,SA5BmB,SAAC2B,GAC5BhB,EAAgBgB,GAChBP,GACF,EA0BUQ,eAAgBR,EAChBnB,UAzDY,SAAC4B,GACH,WAAdA,EAAMC,KAAoBhB,GAC5BC,GAAgB,EAEpB,EAsDUgB,QAASd,EACTe,QAAS,IAAIzB,KACb0B,kBAAmB3G,GAAAA,eACnB4G,aA7BkB,SAACP,GAC3B,OAAIA,EAAKQ,kBAAmB,IAAI5B,MAAO4B,eAC/B,GAAN9G,OAAUC,GAAAA,aAEL,IACT,EAyBU8G,aAAapH,EAAAA,EAAAA,KAAC4E,GAAW,IACzByC,eAAgB,kBAAMtB,GAAgB,EAAM,KAE9C/F,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CACHH,UAAWE,GAAAA,aACXE,OAAQ,WACRkD,QA9BY,WACD4D,SAASC,cAAc,IAADlH,OAAKC,GAAAA,gBACnCkH,OACf,UA+BMrH,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,GAAAA,gBAAoBJ,SAAA,EAClCF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CACHH,UAAS,GAAAC,OAAKC,GAAAA,YAAe,KAAAD,OAAIC,GAAAA,iBACjCE,OAAQ,UACRkD,QAvEY,WACpB,IAAM+D,EAAW,IAAIlC,KAAKG,GAC1B+B,EAASC,SAAS,EAAG,EAAG,EAAG,GACvBD,EAAWxB,IACbwB,EAASE,QAAQF,EAASG,UAAY,GACtCjC,EAAgB8B,GAEpB,KAkEQzH,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CACHH,UAAWE,GAAAA,YACXE,OAAQ,UACRkD,QAnEY,WACpB,IAAMmE,EAAW,IAAItC,KAAKG,GAC1BmC,EAASF,QAAQE,EAASD,UAAY,GAClCC,GAAY,IAAItC,MAClBI,EAAgBkC,EAEpB,YAmEF,E,QE7EA,GA1CkB,WAChB,IAAM9E,GAAWC,EAAAA,EAAAA,MACjBqC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/CK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,IAGpCW,EAAAA,EAAAA,YAAU,YACU,WAChB,GAAIT,EAAc,CAChB,IAAMiB,EAAO,CACXA,KAAMjB,GAER3C,GAAS+E,EAAAA,EAAAA,IAAcnB,GACzB,CACF,CACAoB,EACF,GAAG,CAAChF,EAAU2C,IAEd,IAAMN,EAAU,eAAA5F,GAAAwI,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOvB,GAAI,IAAAwB,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACS,OAA/BH,GAAeI,EAAAA,GAAAA,GAAW5B,GAAKyB,EAAAE,KAAA,EAC/B3C,EAAgBwC,GAAc,KAAD,mBAAAC,EAAAI,OAAA,GAAAN,EAAA,KACpC,gBAHeO,GAAA,OAAAjJ,EAAAkJ,MAAA,KAAAC,UAAA,KAKhB,OACExI,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAcJ,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAiBJ,SAAA,EAC/BF,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAACC,MAAM,WACjBV,EAAAA,EAAAA,KAAA,OAAKI,UAAWE,EAAaJ,UAC3BF,EAAAA,EAAAA,KAAC4I,GAAS,CAACxD,WAAYA,UAI3BjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAgBJ,SAAA,EAC9BF,EAAAA,EAAAA,KAAC6I,EAAY,KACb1I,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAC8I,GAAW,KACZ9I,EAAAA,EAAAA,KAAC+I,EAAY,YAKvB,C,gICvDO,IAAMlI,EAAsB,SAAAmI,GAAK,OAAIA,EAAMC,MAAMtI,aAAc,EACzDI,EAAuB,SAAAiI,GAAK,OAAIA,EAAMC,MAAMnI,cAAe,EAC3DG,EAAuB,SAAA+H,GAAK,OAAIA,EAAMC,MAAMC,SAAU,EACtD/H,EAAmB,SAAA6H,GAAK,OAAIA,EAAMC,MAAME,KAAM,C,kBCI3D,IAPmB,SAACxC,GAClB,IAAMyC,EAAMC,OAAO1C,EAAKiB,WAAW0B,SAAS,EAAG,KACzCC,EAAQF,OAAO1C,EAAK6C,WAAa,GAAGF,SAAS,EAAG,KAChDG,EAAO9C,EAAK+C,cAClB,MAAM,GAANrJ,OAAUoJ,EAAI,KAAApJ,OAAIkJ,EAAK,KAAAlJ,OAAI+I,EAC7B,C","sources":["webpack://react-homework-template/./src/components/StatisticsItem/StatisticsItem.module.css?626e","components/StatisticsItem/StatisticsItem.jsx","webpack://react-homework-template/./src/components/TitlePage/TitlePage.module.css?5ae7","components/TitlePage/TitlePage.jsx","hooks/useDiary.js","webpack://react-homework-template/./src/pages/DiaryPage/DiaryPage.module.css?a519","webpack://react-homework-template/./src/components/DayDashboard/DayDashboard.module.css?df9f","hooks/useStatistics.js","components/DayDashboard/DayDashboard.jsx","webpack://react-homework-template/./src/components/DayExercises/DayExercises.module.css?8065","webpack://react-homework-template/./src/components/ButtonAddItem/ButtonAddItem.module.css?98f8","components/ButtonAddItem/ButtonAddItem.jsx","webpack://react-homework-template/./src/components/ExercisesTable/ExercisesTable.module.css?7d87","components/ExercisesTable/ExercisesTable.jsx","webpack://react-homework-template/./src/components/EmptyList/EmptyList.module.css?c5b6","components/EmptyList/EmptyList.jsx","components/DayExercises/DayExercises.jsx","webpack://react-homework-template/./src/components/DayProducts/DayProducts.module.css?74e4","webpack://react-homework-template/./src/components/ProductsTable/ProductsTable.module.css?8d45","components/ProductsTable/ProductsTable.jsx","components/DayProducts/DayProducts.jsx","webpack://react-homework-template/./src/components/DaySwitch/DaySwitch.module.css?9d6c","components/DaySwitch/DaySwitch.jsx","components/DaySwitch/DaySwitchCalendarStyle.js","pages/DiaryPage/DiaryPage.jsx","redux/diary/diarySelectors.js","utils/formatData.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__ZAGsK\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__kw-pk\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__HJTjN\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__WSxqY\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__NRxuv\",\"statisticTitle\":\"StatisticsItem_statisticTitle__9-4pX\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__4BDlN\",\"statisticIcon\":\"StatisticsItem_statisticIcon__X8AOQ\",\"statisticValue\":\"StatisticsItem_statisticValue__qdzXl\"};","import css from \"./StatisticsItem.module.css\";\nimport Icon from \"../ComponIcon/Icon\";\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary = \"\",\n  isFulfilledNorm = \"\",\n}) => {\n  return (\n    <>\n      <li\n        className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          isFulfilledNorm !== \"\" && isFulfilledNorm\n            ? css.statisticItemPositive\n            : isFulfilledNorm !== \"\" && !isFulfilledNorm\n            ? css.statisticItemNegative\n            : \"\"\n        }`}\n      >\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\nexport default StatisticsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TitlePage_title__zyjBQ\"};","import css from \"./TitlePage.module.css\"\n\nexport default function TitlePage({ title }) {\n  return <h1 className={css.title}>{title}</h1>;\n}\n\n\n","import { useSelector } from \"react-redux\";\nimport { selectDiaryError, selectDiaryExercises, selectDiaryIsLoading, selectDiaryProducts } from \"../redux/diary/diarySelectors\";\n\nconst useDiary = () => {\n    const diaryProducts = useSelector(selectDiaryProducts);\n    const diaryExercises = useSelector(selectDiaryExercises);\n    const diaryIsLoading = useSelector(selectDiaryIsLoading);\n    const diaryError = useSelector(selectDiaryError);\n    \n    return {\n        diaryProducts,\n        diaryExercises,\n        diaryIsLoading,\n        diaryError,\n    };\n};\n\nexport default useDiary;","// extracted by mini-css-extract-plugin\nexport default {\"diaryPage\":\"DiaryPage_diaryPage__pKsQy\",\"calendarWrap\":\"DiaryPage_calendarWrap__cPPCu\",\"calendar\":\"DiaryPage_calendar__EWxfj\",\"sectionWrap\":\"DiaryPage_sectionWrap__fGhT1\"};","// extracted by mini-css-extract-plugin\nexport default {\"dayDashboard\":\"DayDashboard_dayDashboard__XV93s\",\"statisticList\":\"DayDashboard_statisticList__nct9L\",\"adviceWrap\":\"DayDashboard_adviceWrap__d1eN6\",\"adviceIconWrap\":\"DayDashboard_adviceIconWrap__f+yUg\",\"exclamationIcon\":\"DayDashboard_exclamationIcon__xfLbC\",\"adviceText\":\"DayDashboard_adviceText__Ky3eB\"};","import { useSelector } from \"react-redux\";\nimport { selectUser } from \"../redux/auth/authSelectors\";\nimport {\n  // selectDiaryExercises,\n  selectDiaryProducts,\n} from \"../redux/diary/diarySelectors\";\n\nconst useStatistics = () => {\n  const user = useSelector(selectUser);\n  const products = useSelector(selectDiaryProducts);\n  // const execrcises = useSelector(selectDiaryExercises);\n\n  const dailyCalorieIntake = user.profileSettings?.bmr ?? \"0\";\n  const caloriesConsumed = products.reduce(\n    (sum, product) => sum + product.calories,\n    0\n  );\n  const caloriesRemaining = dailyCalorieIntake - caloriesConsumed;\n  const dailyPhysicalActivity = 110;\n  const caloriesBurned = 850; //неправильно треба пігрузити вправи!!!!!!!!!!\n  const sportsRemaining = 180 - dailyPhysicalActivity; //неправильно треба пігрузити вправи!!!!!!!!!!\n\n  return {\n    dailyCalorieIntake,\n    caloriesConsumed,\n    caloriesRemaining,\n    dailyPhysicalActivity,\n    caloriesBurned,\n    sportsRemaining,\n  };\n};\n\nexport default useStatistics;\n","import css from \"./DayDashboard.module.css\";\n\nimport Icon from \"../ComponIcon/Icon\";\nimport StatisticsItem from \"../StatisticsItem/StatisticsItem\";\n\nimport useStatistics from \"../../hooks/useStatistics\";\n\nconst DayDashboard = () => {\n  const {\n    dailyCalorieIntake,\n    caloriesConsumed,\n    caloriesRemaining,\n    dailyPhysicalActivity,\n    caloriesBurned,\n    sportsRemaining,\n  } = useStatistics();\n\n  const isCaloriesRemaining = caloriesConsumed < dailyCalorieIntake;\n  const isSportsRemaining = sportsRemaining > 0;\n\n  return (\n    <div className={css.dayDashboard}>\n      <ul className={css.statisticList}>\n        <StatisticsItem\n          statisticsName={\"Daily calorie intake\"}\n          statisticsValue={dailyCalorieIntake}\n          statisticsIcon={\"Fluent_food\"}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={\"Daily physical activity\"}\n          statisticsValue={`${dailyPhysicalActivity} min`}\n          statisticsIcon={\"Dumbbell\"}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={\"Сalories consumed\"}\n          statisticsValue={caloriesConsumed}\n          statisticsIcon={\"Apple\"}\n        />\n        <StatisticsItem\n          statisticsName={\"Сalories burned\"}\n          statisticsValue={caloriesBurned}\n          statisticsIcon={\"Calories\"}\n        />\n        <StatisticsItem\n          statisticsName={\"Calories remaining\"}\n          statisticsValue={caloriesRemaining}\n          statisticsIcon={\"Bubble\"}\n          isFulfilledNorm={isCaloriesRemaining}\n        />\n        <StatisticsItem\n          statisticsName={\"Sports remaining\"}\n          statisticsValue={\n            isSportsRemaining\n              ? `+${sportsRemaining} min`\n              : `${sportsRemaining} min`\n          }\n          statisticsIcon={\"Runner\"}\n          isFulfilledNorm={isSportsRemaining}\n        />\n      </ul>\n      <div className={css.adviceWrap}>\n        <div className={css.adviceIconWrap}>\n          <Icon\n            className={css.exclamationIcon}\n            iconId={\"tabler:exclamation-mark\"}\n          />\n        </div>\n        <p className={css.adviceText}>\n          Record all your meals in the calorie diary every day. This will help\n          you be aware of your nutrition and make informed choices.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayExecrcises\":\"DayExercises_dayExecrcises__bQ6ZY\",\"dayScrollWrap\":\"DayExercises_dayScrollWrap__LYu-4\",\"diaryNav\":\"DayExercises_diaryNav__wSSyn\",\"diarySubtitle\":\"DayExercises_diarySubtitle__56ycD\"};","// extracted by mini-css-extract-plugin\nexport default {\"addButtonLink\":\"ButtonAddItem_addButtonLink__6S3vs\",\"addButtonTitle\":\"ButtonAddItem_addButtonTitle__0GWN-\",\"addButtonImg\":\"ButtonAddItem_addButtonImg__mhW8u\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport css from \"./ButtonAddItem.module.css\";\nimport Icon from \"../ComponIcon/Icon\";\n\nconst ButtonAddItem = ({ titleLink, titleRoute }) => {\n  return (\n    <>\n      <NavLink className={css.addButtonLink} to={titleRoute}>\n        <p className={css.addButtonTitle}>{titleLink}</p>\n        <Icon className={css.addButtonImg} iconId={\"Arrow\"} />\n      </NavLink>\n    </>\n  );\n};\n\nexport default ButtonAddItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ExercisesTable_diaryMainItem__Uq6bI\",\"table\":\"ExercisesTable_table__57s17\",\"element\":\"ExercisesTable_element__XGGXa\",\"elementWrap\":\"ExercisesTable_elementWrap__Dw79t\",\"nameCategory\":\"ExercisesTable_nameCategory__NXhaV\",\"nameValue\":\"ExercisesTable_nameValue__ktQfv\",\"trashImg\":\"ExercisesTable_trashImg__f8acI\",\"nameTrash\":\"ExercisesTable_nameTrash__DY8HQ\",\"bodyTable\":\"ExercisesTable_bodyTable__D7rlB\",\"diaryMainList\":\"ExercisesTable_diaryMainList__eIyzS\"};","import { useDispatch } from \"react-redux\";\nimport css from \"./ExercisesTable.module.css\";\n\nimport Icon from \"../ComponIcon/Icon\";\nimport { deleteExercisesDiary } from \"../../redux/diary/diaryOperations\";\n\nconst ExercisesTable = ({ execrcises }) => {\n  const dispatch = useDispatch();\n\n  const deleteExercise = (id) => {\n    dispatch(deleteExercisesDiary(id));\n  };\n\n  return (\n    <>\n      <ul className={css.diaryMainList}>\n        {execrcises.map(\n          ({\n            _id,\n            bodyPart,\n            equipment,\n            name,\n            target,\n            burnedCalories,\n            time,\n          }) => (\n            <li key={_id} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Body Part</th>\n                    <td className={css.nameValue}>{bodyPart}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Equipment</th>\n                    <td className={css.nameValue}>{equipment}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Name</th>\n                    <td className={css.nameValue}>{name}</td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Target</th>\n                    <td className={css.nameValue}>{target}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Burned Calories</th>\n                    <td className={css.nameValue}>{burnedCalories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Time</th>\n                    <td className={css.nameValue}>{time}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td\n                      className={css.trashValue}\n                      onClick={() => {\n                        dispatch(deleteExercise(_id));\n                      }}\n                    >\n                      <Icon className={css.trashImg} iconId={\"Trash\"} />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default ExercisesTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"notFoundPlugTextWrap\":\"EmptyList_notFoundPlugTextWrap__t6Msc\",\"notFoundPlugText\":\"EmptyList_notFoundPlugText__zPRyy\"};","import css from \"./EmptyList.module.css\";\n\nconst EmptyList = ({ listName }) => {\n  return (\n    <div className={css.notFoundPlugTextWrap}>\n      <p className={css.notFoundPlugText}>Not found {listName}</p>\n    </div>\n  );\n};\n\nexport default EmptyList;\n","import css from \"./DayExercises.module.css\";\nimport useDiary from \"../../hooks/useDiary\";\n\nimport { EXERCISES_ROUTE } from \"../../utils/const\";\nimport ButtonAddItem from \"../ButtonAddItem/ButtonAddItem\";\nimport ExercisesTable from \"../ExercisesTable/ExercisesTable\";\nimport EmptyList from \"../EmptyList/EmptyList\";\n\nconst DayExercises = () => {\n  const { diaryExercises } = useDiary();\n\n  return (\n    <>\n      <div className={css.dayExecrcises}>\n        <div className={css.dayScrollWrap}>\n          <div className={css.diaryNav}>\n            <h3 className={css.diarySubtitle}>Execrcises</h3>\n            <ButtonAddItem\n              titleLink=\"Add exercise\"\n              titleRoute={EXERCISES_ROUTE}\n            />\n          </div>\n          {diaryExercises.length === 0 ? (\n            <EmptyList listName={\"exercises\"} />\n          ) : (\n            <ExercisesTable execrcises={diaryExercises} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DayExercises;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayProducts\":\"DayProducts_dayProducts__LAo5g\",\"dayScrollWrap\":\"DayProducts_dayScrollWrap__DIuIV\",\"diaryNav\":\"DayProducts_diaryNav__JjD4d\",\"diarySubtitle\":\"DayProducts_diarySubtitle__3acfh\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ProductsTable_diaryMainItem__qlJX4\",\"element\":\"ProductsTable_element__aIisf\",\"elementWrap\":\"ProductsTable_elementWrap__0QI3A\",\"nameCategory\":\"ProductsTable_nameCategory__e1unZ\",\"nameValue\":\"ProductsTable_nameValue__dFBF+\",\"recommendWrap\":\"ProductsTable_recommendWrap__ZRMtE\",\"productRecommend\":\"ProductsTable_productRecommend__rAcms\",\"productNotRecommend\":\"ProductsTable_productNotRecommend__reFto\",\"trashValue\":\"ProductsTable_trashValue__YrW-N\",\"trashImg\":\"ProductsTable_trashImg__HTxxa\",\"nameTrash\":\"ProductsTable_nameTrash__tJVPK\",\"table\":\"ProductsTable_table__IpdJ7\",\"bodyTable\":\"ProductsTable_bodyTable__JWiA8\",\"diaryMainList\":\"ProductsTable_diaryMainList__bG8Dg\"};","import { useDispatch } from \"react-redux\";\nimport Icon from \"../ComponIcon/Icon\";\nimport css from \"./ProductsTable.module.css\";\nimport { deleteProductDiary } from \"../../redux/diary/diaryOperations\";\n\nconst ProductsTable = ({ products }) => {\n  const dispatch = useDispatch();\n\n  const deleteProduct = (_id) => {\n    dispatch(deleteProductDiary(_id));\n  };\n\n  return (\n    <ul className={css.diaryMainList}>\n      {products.map(\n        ({_id, title, category, calories, amount, recommended }, i) => {\n          return (\n          <li key={_id} className={css.diaryMainItem}>\n            <table className={css.table}>\n              <tbody className={css.bodyTable}>\n                <tr className={css.element}>\n                  <th className={css.nameCategory}>Title</th>\n                  <td className={css.nameValue}>{title}</td>\n                </tr>\n                <tr className={css.element}>\n                  <th className={css.nameCategory}>Category</th>\n                  <td className={css.nameValue}>{category}</td>\n                </tr>\n              </tbody>\n              <tbody className={css.elementWrap}>\n                <tr className={css.element}>\n                  <th className={css.nameCategory}>Calories</th>\n                  <td className={css.nameValue}>{calories}</td>\n                </tr>\n                <tr className={css.element}>\n                  <th className={css.nameCategory}>Weight</th>\n                  <td className={css.nameValue}>{amount}</td>\n                </tr>\n                <tr className={css.element}>\n                  <th className={css.nameCategory}>Recommend</th>\n                  <td className={css.nameValue}>\n                    <div className={`${css.recommendWrap}`}>\n                      <span\n                        className={\n                          recommended\n                            ? `${css.productRecommend}`\n                            : `${css.productNotRecommend}`\n                        }\n                      ></span>\n                      {recommended ? \"Yes\" : \"No\"}\n                    </div>\n                  </td>\n                </tr>\n                <tr className={css.element}>\n                  <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                    Trash\n                  </th>\n                  <td\n                    className={css.trashValue}\n                    onClick={() => {\n                      deleteProduct(_id);\n                    }}\n                  >\n                    <Icon className={css.trashImg} iconId={\"Trash\"} />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </li>\n        )}\n      )}\n    </ul>\n  );\n};\n\nexport default ProductsTable;\n","import css from \"./DayProducts.module.css\";\nimport useDiary from \"../../hooks/useDiary\";\n\nimport { PRODUCT_ROUTE } from \"../../utils/const\";\nimport ButtonAddItem from \"../ButtonAddItem/ButtonAddItem\";\nimport ProductsTable from \"../ProductsTable/ProductsTable\";\nimport EmptyList from \"../EmptyList/EmptyList\";\n\n\nconst DayProducts = () => {\n  const { diaryProducts } = useDiary();\n\n  return (\n    <div className={css.dayProducts}>\n      <div className={css.dayScrollWrap}>\n        <div className={css.diaryNav}>\n          <h3 className={css.diarySubtitle}>Products</h3>\n          <ButtonAddItem titleLink=\"Add product\" titleRoute={PRODUCT_ROUTE} />\n        </div>\n        {diaryProducts.length === 0 ? (\n          <EmptyList listName={\"products\"} />\n        ) : (\n          <ProductsTable products={diaryProducts} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DayProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"daySwitch\":\"DaySwitch_daySwitch__Fv7Lz\",\"inputWrap\":\"DaySwitch_inputWrap__Ra4R+\",\"calendarInput\":\"DaySwitch_calendarInput__0uBnb\",\"calendarIcon\":\"DaySwitch_calendarIcon__LyIhh\",\"currentDate\":\"DaySwitch_currentDate__BhZlX\",\"chevronIconWrap\":\"DaySwitch_chevronIconWrap__ooP6n\",\"chevronIcon\":\"DaySwitch_chevronIcon__ih5GH\",\"chevronLeftIcon\":\"DaySwitch_chevronLeftIcon__E70xl\"};","import React, { useState, useEffect, forwardRef } from \"react\";\nimport css from \"./DaySwitch.module.css\";\n\nimport DatePicker from \"react-datepicker\";\nimport useAuth from \"../../hooks/useAuth\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Icon from \"../ComponIcon/Icon\";\nimport DatePickerStyles from \"./DaySwitchCalendarStyle\";\n\nconst CustomInput = forwardRef(\n  ({ value, onClick, onChange, onKeyDown }, ref) => {\n    const handleChange = (e) => {\n      onChange(e.target.value);\n    };\n\n    return (\n      <div>\n        <input\n          ref={ref}\n          className={css.calendarInput}\n          value={value}\n          onClick={(e) => {\n            // onClick();\n            onClick(e);\n          }}\n          onChange={handleChange}\n          onKeyDown={onKeyDown}\n          readOnly\n        />\n      </div>\n    );\n  }\n);\n\nconst DaySwitch = ({ handleDate }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [calendarOpen, setCalendarOpen] = useState(false);\n\n  const { user } = useAuth();\n  const userRegistrationDate = new Date(user.registrDate);\n\n  useEffect(() => {\n    handleDate(selectedDate);\n  }, [selectedDate, handleDate]);\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Escape\" && calendarOpen) {\n      setCalendarOpen(false);\n    }\n  };\n\n  const handlePrevDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setHours(0, 0, 0, 0);\n    if (prevDate > userRegistrationDate) {\n      prevDate.setDate(prevDate.getDate() - 1);\n      setSelectedDate(prevDate);\n    }\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    if (nextDate <= new Date()) {\n      setSelectedDate(nextDate);\n    }\n  };\n\n  const toggleCalendar = (e) => {\n    setCalendarOpen(!calendarOpen);\n  };\n\n  const handleCalendarChange = (date) => {\n    setSelectedDate(date);\n    toggleCalendar();\n  };\n\n  const currentDayClassName = (date) => {\n    if (date.toDateString() === new Date().toDateString()) {\n      return `${css.currentDate}`;\n    }\n    return null;\n  };\n\n  const handleIconClick = () => {\n    const inputElement = document.querySelector(`.${css.calendarInput}`);\n    inputElement.click();\n  };\n\n  return (\n    <div>\n      <style>{DatePickerStyles}</style>\n      <div className={css.daySwitch}>\n        <div className={css.inputWrap} onClick={toggleCalendar}>\n          <DatePicker\n            showYearDropdown\n            scrollableYearDropdown\n            yearDropdownItemNumber={100}\n            dateFormat=\"dd/MM/yyyy\"\n            selected={selectedDate}\n            onChange={handleCalendarChange}\n            onClickCapture={toggleCalendar}\n            onKeyDown={handleKeyDown}\n            minDate={userRegistrationDate}\n            maxDate={new Date()}\n            calendarClassName={css.customCalendar}\n            dayClassName={currentDayClassName}\n            customInput={<CustomInput />}\n            onClickOutside={() => setCalendarOpen(false)}\n          />\n          <div>\n            <Icon\n              className={css.calendarIcon}\n              iconId={\"Calendar\"}\n              onClick={handleIconClick}\n            />\n          </div>\n        </div>\n        <div className={css.chevronIconWrap}>\n          <Icon\n            className={`${css.chevronIcon} ${css.chevronLeftIcon}`}\n            iconId={\"Chevron\"}\n            onClick={handlePrevDay}\n          />\n          <Icon\n            className={css.chevronIcon}\n            iconId={\"Chevron\"}\n            onClick={handleNextDay}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DaySwitch;\n","const DatePickerStyles = `\n  .react-datepicker__month-container{\n    border-radius: 8px;\n    background: #EF8964;\n  }\n  .react-datepicker__header {\n    background-color:  #EF8964;\n    color: #EFEDE8;\n  }\n    .react-datepicker__year-read-view{\n      display:none;\n    }\n  .react-datepicker__day-name{\n     color:rgba(239, 237, 232, 0.50);\n}\n.react-datepicker__day--disabled{\n  color:rgba(239, 237, 232, 0.50) !important;\n}\n\n.react-datepicker__day--disabled:hover{\n  background-color:inherit !important;\n}\n   .react-datepicker__current-month {\n     color:#EFEDE8;\n}\n.react-datepicker__day--selected{\n  border-radius: 50px;\n  background-color: black;\n}\n.react-datepicker__day {\n  color:#EFEDE8;\n}\n.react-datepicker__day:hover{\n background-color:black;\nborder-radius: 50px;\ntransition: all 150ms linear;\n}\n`;\n\nexport default DatePickerStyles;","import css from \"./DiaryPage.module.css\";\n\nimport TitlePage from \"../../components/TitlePage/TitlePage\";\n\nimport DayDashboard from \"../../components/DayDashboard/DayDashboard\";\nimport DayExercises from \"../../components/DayExercises/DayExercises\";\nimport DayProducts from \"../../components/DayProducts/DayProducts\";\nimport DaySwitch from \"../../components/DaySwitch/DaySwitch\";\n\nimport { useDispatch } from \"react-redux\";\nimport { fetchAllDiary } from \"../../redux/diary/diaryOperations\";\nimport { useEffect, useState } from \"react\";\nimport formatDate from \"../../utils/formatData\";\n\n\nconst DiaryPage = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  \n  useEffect(() => {\n    const fetchDate = () => {\n      if (selectedDate) {\n        const date = {\n          date: selectedDate,\n        };\n        dispatch(fetchAllDiary(date));\n      }\n    };\n    fetchDate();\n  }, [dispatch, selectedDate]);\n\n  const handleDate = async (date) => {\n    const formatedDate = formatDate(date);\n    await setSelectedDate(formatedDate);\n  };\n\n  return (\n    <div className={css.diaryPage}>\n      <div className={css.calendarWrap}>\n        <TitlePage title=\"Diary\" />\n        <div className={css.calendar}>\n          <DaySwitch handleDate={handleDate} />\n        </div>\n      </div>\n\n      <div className={css.sectionWrap}>\n        <DayDashboard />\n        <div>\n          <DayProducts />\n          <DayExercises />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryPage;\n","export const selectDiaryProducts = state => state.diary.diaryProducts;\nexport const selectDiaryExercises = state => state.diary.diaryExercises;\nexport const selectDiaryIsLoading = state => state.diary.isLoading;\nexport const selectDiaryError = state => state.diary.error;\n","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\nexport default formatDate;\n"],"names":["_ref","statisticsName","statisticsIcon","statisticsValue","_ref$statisticPrimary","statisticPrimary","_ref$isFulfilledNorm","isFulfilledNorm","_jsx","_Fragment","children","_jsxs","className","concat","css","Icon","iconId","TitlePage","title","diaryProducts","useSelector","selectDiaryProducts","diaryExercises","selectDiaryExercises","diaryIsLoading","selectDiaryIsLoading","diaryError","selectDiaryError","_user$profileSettings","_user$profileSettings2","user","selectUser","products","dailyCalorieIntake","profileSettings","bmr","caloriesConsumed","reduce","sum","product","calories","caloriesRemaining","dailyPhysicalActivity","caloriesBurned","sportsRemaining","_useStatistics","useStatistics","isCaloriesRemaining","isSportsRemaining","StatisticsItem","titleLink","titleRoute","NavLink","to","execrcises","dispatch","useDispatch","map","_ref2","_id","bodyPart","equipment","name","target","burnedCalories","time","onClick","id","deleteExercisesDiary","listName","useDiary","ButtonAddItem","EXERCISES_ROUTE","length","EmptyList","ExercisesTable","i","category","amount","recommended","deleteProductDiary","deleteProduct","PRODUCT_ROUTE","ProductsTable","CustomInput","forwardRef","ref","value","onChange","onKeyDown","e","readOnly","handleDate","_useState","useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","calendarOpen","setCalendarOpen","useAuth","userRegistrationDate","registrDate","useEffect","toggleCalendar","DatePicker","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","dateFormat","selected","date","onClickCapture","event","key","minDate","maxDate","calendarClassName","dayClassName","toDateString","customInput","onClickOutside","document","querySelector","click","prevDate","setHours","setDate","getDate","nextDate","fetchAllDiary","fetchDate","_asyncToGenerator","_regeneratorRuntime","_callee","formatedDate","_context","prev","next","formatDate","stop","_x","apply","arguments","DaySwitch","DayDashboard","DayProducts","DayExercises","state","diary","isLoading","error","day","String","padStart","month","getMonth","year","getFullYear"],"sourceRoot":""}