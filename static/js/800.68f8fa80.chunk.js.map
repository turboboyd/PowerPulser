{"version":3,"file":"static/js/800.68f8fa80.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/StatisticsItem/StatisticsItem.module.css?626e","components/StatisticsItem/StatisticsItem.jsx","webpack://react-homework-template/./src/components/TitlePage/TitlePage.module.css?5ae7","components/TitlePage/TitlePage.jsx","hooks/useDiary.js","webpack://react-homework-template/./src/pages/DiaryPage/DiaryPage.module.css?a519","webpack://react-homework-template/./src/components/DayDashboard/DayDashboard.module.css?df9f","hooks/useStatistics.js","components/DayDashboard/DayDashboard.jsx","webpack://react-homework-template/./src/components/DayExercises/DayExercises.module.css?8065","webpack://react-homework-template/./src/components/ButtonAddItem/ButtonAddItem.module.css?98f8","components/ButtonAddItem/ButtonAddItem.jsx","webpack://react-homework-template/./src/components/ExercisesTable/ExercisesTable.module.css?7d87","components/ExercisesTable/ExercisesTable.jsx","webpack://react-homework-template/./src/components/EmptyList/EmptyList.module.css?c5b6","components/EmptyList/EmptyList.jsx","components/DayExercises/DayExercises.jsx","webpack://react-homework-template/./src/components/DayProducts/DayProducts.module.css?74e4","webpack://react-homework-template/./src/components/ProductsTable/ProductsTable.module.css?8d45","components/ProductsTable/ProductsTable.jsx","components/DayProducts/DayProducts.jsx","webpack://react-homework-template/./src/components/DaySwitch/DaySwitch.module.css?9d6c","components/DaySwitch/DaySwitch.jsx","components/DaySwitch/DaySwitchCalendarStyle.js","pages/DiaryPage/DiaryPage.jsx","redux/diary/diarySelectors.js","utils/capitalizedWord.js","utils/formatData.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__ZAGsK\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__kw-pk\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__HJTjN\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__WSxqY\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__NRxuv\",\"statisticTitle\":\"StatisticsItem_statisticTitle__9-4pX\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__4BDlN\",\"statisticIcon\":\"StatisticsItem_statisticIcon__X8AOQ\",\"statisticValue\":\"StatisticsItem_statisticValue__qdzXl\"};","import css from './StatisticsItem.module.css';\nimport Icon from '../ComponIcon/Icon';\nimport PropTypes from 'prop-types';\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary,\n  fulfilledNorm = '',\n}) => {\n  return (\n    <>\n      <li\n        className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          fulfilledNorm !== '' && fulfilledNorm === 'positive'\n            ? css.statisticItemPositive\n            : fulfilledNorm !== '' && fulfilledNorm === 'negative'\n            ? css.statisticItemNegative\n            : ''\n        }`}\n      >\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\nStatisticsItem.propTypes = {\n  statisticsName: PropTypes.string.isRequired,\n  statisticsIcon: PropTypes.string.isRequired,\n  statisticsValue: PropTypes.string.isRequired,\n  statisticPrimary: PropTypes.bool,\n  fulfilledNorm: PropTypes.string,\n};\n\nexport default StatisticsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TitlePage_title__zyjBQ\"};","import css from \"./TitlePage.module.css\"\n\nexport default function TitlePage({ title }) {\n  return <h1 className={css.title}>{title}</h1>;\n}\n\n\n","import { useSelector } from \"react-redux\";\nimport { selectDiaryError, selectDiaryExercises, selectDiaryIsLoading, selectDiaryProducts } from \"../redux/diary/diarySelectors\";\n\nconst useDiary = () => {\n    const diaryProducts = useSelector(selectDiaryProducts);\n    const diaryExercises = useSelector(selectDiaryExercises);\n    const diaryIsLoading = useSelector(selectDiaryIsLoading);\n    const diaryError = useSelector(selectDiaryError);\n    \n    return {\n        diaryProducts,\n        diaryExercises,\n        diaryIsLoading,\n        diaryError,\n    };\n};\n\nexport default useDiary;","// extracted by mini-css-extract-plugin\nexport default {\"diaryPage\":\"DiaryPage_diaryPage__pKsQy\",\"calendarWrap\":\"DiaryPage_calendarWrap__cPPCu\",\"calendar\":\"DiaryPage_calendar__EWxfj\",\"sectionWrap\":\"DiaryPage_sectionWrap__fGhT1\"};","// extracted by mini-css-extract-plugin\nexport default {\"dayDashboard\":\"DayDashboard_dayDashboard__XV93s\",\"statisticList\":\"DayDashboard_statisticList__nct9L\",\"adviceWrap\":\"DayDashboard_adviceWrap__d1eN6\",\"adviceIconWrap\":\"DayDashboard_adviceIconWrap__f+yUg\",\"exclamationIcon\":\"DayDashboard_exclamationIcon__xfLbC\",\"adviceText\":\"DayDashboard_adviceText__Ky3eB\"};","import { useSelector } from 'react-redux';\nimport { selectUser } from '../redux/auth/authSelectors';\nimport {\n  selectDiaryExercises,\n  selectDiaryProducts,\n} from '../redux/diary/diarySelectors';\n\nconst useStatistics = () => {\n  const user = useSelector(selectUser);\n  const products = useSelector(selectDiaryProducts);\n  const execrcises = useSelector(selectDiaryExercises);\n\n  const dailyCalorieIntake = user.profileSettings?.bmr ?? '0';\n  const caloriesConsumed = products.reduce(\n    (sum, product) => sum + product.calories,\n    0\n  );\n  const caloriesRemaining = dailyCalorieIntake - caloriesConsumed;\n  const dailyPhysicalActivity = 110;\n  const caloriesBurned = execrcises.reduce(\n    (sum, execrcise) => sum + execrcise.calories,\n    0\n  );\n  const timeSport = execrcises.reduce(\n    (sum, execrcise) => sum + execrcise.time,\n    0\n  );\n\n  const sportsRemaining = Math.floor(timeSport / 60) - dailyPhysicalActivity;\n\n  return {\n    dailyCalorieIntake,\n    caloriesConsumed,\n    caloriesRemaining,\n    dailyPhysicalActivity,\n    caloriesBurned,\n    sportsRemaining,\n  };\n};\n\nexport default useStatistics;\n","import css from './DayDashboard.module.css';\n\nimport Icon from '../ComponIcon/Icon';\nimport StatisticsItem from '../StatisticsItem/StatisticsItem';\n\nimport useStatistics from '../../hooks/useStatistics';\n\nconst DayDashboard = () => {\n  const {\n    dailyCalorieIntake,\n    caloriesConsumed,\n    caloriesRemaining,\n    dailyPhysicalActivity,\n    caloriesBurned,\n    sportsRemaining,\n  } = useStatistics();\n\n  const isCaloriesRemaining =\n    caloriesConsumed < dailyCalorieIntake ? `positive` : `negative`;\n  const isSportsRemaining =\n    sportsRemaining > 0 ? `positive` : `negative`;\n\n  return (\n    <div className={css.dayDashboard}>\n      <ul className={css.statisticList}>\n        <StatisticsItem\n          statisticsName={'Daily calorie intake'}\n          statisticsValue={`${dailyCalorieIntake}`}\n          statisticsIcon={'Fluent_food'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Daily physical activity'}\n          statisticsValue={`${dailyPhysicalActivity} min`}\n          statisticsIcon={'Dumbbell'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Сalories consumed'}\n          statisticsValue={`${caloriesConsumed}`}\n          statisticsIcon={'Apple'}\n        />\n        <StatisticsItem\n          statisticsName={'Сalories burned'}\n          statisticsValue={`${caloriesBurned}`}\n          statisticsIcon={'Calories'}\n        />\n        <StatisticsItem\n          statisticsName={'Calories remaining'}\n          statisticsValue={`${caloriesRemaining}`}\n          statisticsIcon={'Bubble'}\n          fulfilledNorm={isCaloriesRemaining}\n        />\n        <StatisticsItem\n          statisticsName={'Sports remaining'}\n          statisticsValue={\n            isSportsRemaining === 'positive'\n              ? `+${sportsRemaining} min`\n              : `${sportsRemaining} min`\n          }\n          statisticsIcon={'Runner'}\n          fulfilledNorm={isSportsRemaining}\n        />\n      </ul>\n      <div className={css.adviceWrap}>\n        <div className={css.adviceIconWrap}>\n          <Icon\n            className={css.exclamationIcon}\n            iconId={'tabler:exclamation-mark'}\n          />\n        </div>\n        <p className={css.adviceText}>\n          Record all your meals in the calorie diary every day. This will help\n          you be aware of your nutrition and make informed choices.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayExecrcises\":\"DayExercises_dayExecrcises__bQ6ZY\",\"dayScrollWrap\":\"DayExercises_dayScrollWrap__LYu-4\",\"diaryNav\":\"DayExercises_diaryNav__wSSyn\",\"diarySubtitle\":\"DayExercises_diarySubtitle__56ycD\"};","// extracted by mini-css-extract-plugin\nexport default {\"addButtonLink\":\"ButtonAddItem_addButtonLink__6S3vs\",\"addButtonImg\":\"ButtonAddItem_addButtonImg__mhW8u\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport css from \"./ButtonAddItem.module.css\";\nimport Icon from \"../ComponIcon/Icon\";\nimport PropTypes from 'prop-types';\n\nconst ButtonAddItem = ({ titleLink, titleRoute }) => {\n  return (\n    <>\n      <NavLink className={css.addButtonLink} to={titleRoute}>\n        {titleLink}\n        <Icon className={css.addButtonImg} iconId={'Arrow'} />\n      </NavLink>\n    </>\n  );\n};\n\nButtonAddItem.propTypes = {\n  titleLink: PropTypes.string.isRequired,\n};\n\nexport default ButtonAddItem;\n\n\nButtonAddItem.propTypes = {\n  titleLink: PropTypes.string.isRequired,\n  titleRoute: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ExercisesTable_diaryMainItem__Uq6bI\",\"table\":\"ExercisesTable_table__57s17\",\"element\":\"ExercisesTable_element__XGGXa\",\"elementWrap\":\"ExercisesTable_elementWrap__Dw79t\",\"nameCategory\":\"ExercisesTable_nameCategory__NXhaV\",\"nameValue\":\"ExercisesTable_nameValue__ktQfv\",\"trashImg\":\"ExercisesTable_trashImg__f8acI\",\"nameTrash\":\"ExercisesTable_nameTrash__DY8HQ\",\"bodyTable\":\"ExercisesTable_bodyTable__D7rlB\",\"diaryMainList\":\"ExercisesTable_diaryMainList__eIyzS\"};","import { useDispatch } from 'react-redux';\nimport css from './ExercisesTable.module.css';\nimport capitalizedWord from 'utils/capitalizedWord';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../ComponIcon/Icon';\nimport { deleteExercisesDiary } from '../../redux/diary/diaryOperations';\n\nconst ExercisesTable = ({ execrcises }) => {\n  const dispatch = useDispatch();\n\n  const deleteExercise = id => {\n    dispatch(deleteExercisesDiary(id));\n  };\n\n  return (\n    <>\n      <ul className={css.diaryMainList}>\n        {execrcises.map(\n          ({ _id, bodyPart, equipment, name, target, calories, time }) => (\n            <li key={_id} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Body Part</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(bodyPart)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Equipment</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(equipment)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Name</th>\n                    <td className={css.nameValue}>{capitalizedWord(name)}</td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Target</th>\n                    <td className={css.nameValue}>{capitalizedWord(target)}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Burned Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Time</th>\n                    <td className={css.nameValue}>{time}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td\n                      className={css.trashValue}\n                      onClick={() => {\n                        dispatch(deleteExercise(_id));\n                      }}\n                    >\n                      <Icon className={css.trashImg} iconId={'Trash'} />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nExercisesTable.propTypes = {\n  execrcises: PropTypes.array.isRequired,\n};\n\nexport default ExercisesTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"notFoundPlugTextWrap\":\"EmptyList_notFoundPlugTextWrap__t6Msc\",\"notFoundPlugText\":\"EmptyList_notFoundPlugText__zPRyy\"};","import css from \"./EmptyList.module.css\";\nimport PropTypes from 'prop-types';\n\nconst EmptyList = ({ listName }) => {\n  return (\n    <div className={css.notFoundPlugTextWrap}>\n      <p className={css.notFoundPlugText}>Not found {listName}</p>\n    </div>\n  );\n};\n\n\nEmptyList.propTypes = {\n  listName: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import css from \"./DayExercises.module.css\";\nimport useDiary from \"../../hooks/useDiary\";\n\nimport { EXERCISES_ROUTE } from \"../../utils/const\";\nimport ButtonAddItem from \"../ButtonAddItem/ButtonAddItem\";\nimport ExercisesTable from \"../ExercisesTable/ExercisesTable\";\nimport EmptyList from \"../EmptyList/EmptyList\";\n\nconst DayExercises = () => {\n  const { diaryExercises } = useDiary();\n\n  return (\n    <>\n      <div className={css.dayExecrcises}>\n        <div className={css.dayScrollWrap}>\n          <div className={css.diaryNav}>\n            <h3 className={css.diarySubtitle}>Execrcises</h3>\n            <ButtonAddItem\n              titleLink=\"Add exercise\"\n              titleRoute={EXERCISES_ROUTE}\n            />\n          </div>\n          {diaryExercises.length === 0 ? (\n            <EmptyList listName={\"exercises\"} />\n          ) : (\n            <ExercisesTable execrcises={diaryExercises} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DayExercises;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayProducts\":\"DayProducts_dayProducts__LAo5g\",\"dayScrollWrap\":\"DayProducts_dayScrollWrap__DIuIV\",\"diaryNav\":\"DayProducts_diaryNav__JjD4d\",\"diarySubtitle\":\"DayProducts_diarySubtitle__3acfh\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ProductsTable_diaryMainItem__qlJX4\",\"element\":\"ProductsTable_element__aIisf\",\"elementWrap\":\"ProductsTable_elementWrap__0QI3A\",\"nameCategory\":\"ProductsTable_nameCategory__e1unZ\",\"nameValue\":\"ProductsTable_nameValue__dFBF+\",\"recommendWrap\":\"ProductsTable_recommendWrap__ZRMtE\",\"productRecommend\":\"ProductsTable_productRecommend__rAcms\",\"productNotRecommend\":\"ProductsTable_productNotRecommend__reFto\",\"trashValue\":\"ProductsTable_trashValue__YrW-N\",\"trashImg\":\"ProductsTable_trashImg__HTxxa\",\"nameTrash\":\"ProductsTable_nameTrash__tJVPK\",\"table\":\"ProductsTable_table__IpdJ7\",\"bodyTable\":\"ProductsTable_bodyTable__JWiA8\",\"diaryMainList\":\"ProductsTable_diaryMainList__bG8Dg\"};","import { useDispatch } from 'react-redux';\nimport Icon from '../ComponIcon/Icon';\nimport css from './ProductsTable.module.css';\nimport { deleteProductDiary } from '../../redux/diary/diaryOperations';\nimport capitalizedWord from 'utils/capitalizedWord';\nimport PropTypes from 'prop-types';\n\nconst ProductsTable = ({ products }) => {\n  const dispatch = useDispatch();\n\n  const deleteProduct = id => {\n    dispatch(deleteProductDiary(id));\n  };\n\n  return (\n    <ul className={css.diaryMainList}>\n      {products.map(\n        ({ _id, title, category, calories, amount, recommended }, i) => {\n          return (\n            <li key={_id} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Title</th>\n                    <td className={css.nameValue}>{capitalizedWord(title)}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Category</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(category)}\n                    </td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Weight</th>\n                    <td className={css.nameValue}>{amount}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Recommend</th>\n                    <td className={css.nameValue}>\n                      <div className={`${css.recommendWrap}`}>\n                        <span\n                          className={\n                            recommended\n                              ? `${css.productRecommend}`\n                              : `${css.productNotRecommend}`\n                          }\n                        ></span>\n                        {recommended ? 'Yes' : 'No'}\n                      </div>\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td\n                      className={css.trashValue}\n                      onClick={() => {\n                        deleteProduct(_id);\n                      }}\n                    >\n                      <Icon className={css.trashImg} iconId={'Trash'} />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          );\n        }\n      )}\n    </ul>\n  );\n};\n\nProductsTable.propTypes = {\n  products: PropTypes.array.isRequired,\n};\n\nexport default ProductsTable;\n","import css from \"./DayProducts.module.css\";\nimport useDiary from \"../../hooks/useDiary\";\n\nimport { PRODUCT_ROUTE } from \"../../utils/const\";\nimport ButtonAddItem from \"../ButtonAddItem/ButtonAddItem\";\nimport ProductsTable from \"../ProductsTable/ProductsTable\";\nimport EmptyList from \"../EmptyList/EmptyList\";\n\n\nconst DayProducts = () => {\n  const { diaryProducts } = useDiary();\n\n  return (\n    <div className={css.dayProducts}>\n      <div className={css.dayScrollWrap}>\n        <div className={css.diaryNav}>\n          <h3 className={css.diarySubtitle}>Products</h3>\n          <ButtonAddItem titleLink=\"Add product\" titleRoute={PRODUCT_ROUTE} />\n        </div>\n        {diaryProducts.length === 0 ? (\n          <EmptyList listName={\"products\"} />\n        ) : (\n          <ProductsTable products={diaryProducts} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DayProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"daySwitch\":\"DaySwitch_daySwitch__Fv7Lz\",\"inputWrap\":\"DaySwitch_inputWrap__Ra4R+\",\"calendarInput\":\"DaySwitch_calendarInput__0uBnb\",\"calendarIcon\":\"DaySwitch_calendarIcon__LyIhh\",\"currentDate\":\"DaySwitch_currentDate__BhZlX\",\"chevronIconWrap\":\"DaySwitch_chevronIconWrap__ooP6n\",\"chevronIcon\":\"DaySwitch_chevronIcon__ih5GH\",\"chevronLeftIcon\":\"DaySwitch_chevronLeftIcon__E70xl\"};","import React, { useState, useEffect, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './DaySwitch.module.css';\n\nimport DatePicker from 'react-datepicker';\nimport useAuth from '../../hooks/useAuth';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport Icon from '../ComponIcon/Icon';\nimport DatePickerStyles from './DaySwitchCalendarStyle';\n\nconst CustomInput = forwardRef(\n  ({ value, onClick, onChange, onKeyDown }, ref) => {\n    const handleChange = e => {\n      onChange(e.target.value);\n    };\n\n    return (\n      <div>\n        <input\n          ref={ref}\n          className={css.calendarInput}\n          value={value}\n          onClick={e => {\n            onClick(e);\n          }}\n          onChange={handleChange}\n          onKeyDown={onKeyDown}\n          readOnly\n        />\n      </div>\n    );\n  }\n);\n\nconst DaySwitch = ({ handleDate }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [calendarOpen, setCalendarOpen] = useState(false);\n\n  const { user } = useAuth();\n  const userRegistrationDate = new Date(user.registrDate);\n\n  useEffect(() => {\n    handleDate(selectedDate);\n  }, [selectedDate, handleDate]);\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape' && calendarOpen) {\n      setCalendarOpen(false);\n    }\n  };\n\n  const handlePrevDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setHours(0, 0, 0, 0);\n    if (prevDate > userRegistrationDate) {\n      prevDate.setDate(prevDate.getDate() - 1);\n      setSelectedDate(prevDate);\n    }\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    if (nextDate <= new Date()) {\n      setSelectedDate(nextDate);\n    }\n  };\n\n  const handleCalendarChange = date => {\n    setSelectedDate(date);\n  };\n\n  const toggleCalendar = () => {\n    setCalendarOpen(prevCalendarOpen => !prevCalendarOpen);\n  };\n\n  const currentDayClassName = date => {\n    if (date.toDateString() === new Date().toDateString()) {\n      return `${css.currentDate}`;\n    }\n    return null;\n  };\n\n  const handleIconClick = toggleFn => {\n    const inputElement = document.querySelector(`.${css.calendarInput}`);\n    inputElement.click();\n    toggleFn();\n  };\n\n  return (\n    <div>\n      <style>{DatePickerStyles}</style>\n      <div className={css.daySwitch}>\n        <div\n          className={css.inputWrap}\n          onClick={() => handleIconClick(toggleCalendar)}\n        >\n          <DatePicker\n            showYearDropdown\n            scrollableYearDropdown\n            yearDropdownItemNumber={100}\n            dateFormat=\"dd/MM/yyyy\"\n            selected={selectedDate}\n            onChange={handleCalendarChange}\n            onKeyDown={handleKeyDown}\n            minDate={userRegistrationDate}\n            maxDate={new Date()}\n            calendarClassName={css.customCalendar}\n            dayClassName={currentDayClassName}\n            customInput={<CustomInput />}\n            onClickOutside={() => setCalendarOpen(false)}\n          />\n          <div>\n            <Icon\n              className={css.calendarIcon}\n              iconId={'Calendar'}\n              onClick={handleIconClick}\n            />\n          </div>\n        </div>\n        <div className={css.chevronIconWrap}>\n          <Icon\n            className={`${css.chevronIcon} ${css.chevronLeftIcon}`}\n            iconId={'Chevron'}\n            onClick={handlePrevDay}\n          />\n          <Icon\n            className={css.chevronIcon}\n            iconId={'Chevron'}\n            onClick={handleNextDay}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDaySwitch.propTypes = {\n  handleDate: PropTypes.func.isRequired,\n};\n\nexport default DaySwitch;\n","const DatePickerStyles = `\n  .react-datepicker__month-container{\n    border-radius: 8px;\n    background: #EF8964;\n  }\n  .react-datepicker__header {\n    background-color:  #EF8964;\n    color: #EFEDE8;\n  }\n    .react-datepicker__year-read-view{\n      display:none;\n    }\n  .react-datepicker__day-name{\n     color:rgba(239, 237, 232, 0.50);\n}\n.react-datepicker__day--disabled{\n  color:rgba(239, 237, 232, 0.50) !important;\n}\n\n.react-datepicker__day--disabled:hover{\n  background-color:inherit !important;\n}\n   .react-datepicker__current-month {\n     color:#EFEDE8;\n}\n.react-datepicker__day--selected{\n  border-radius: 50px;\n  background-color: black;\n}\n.react-datepicker__day {\n  color:#EFEDE8;\n}\n.react-datepicker__day:hover{\n background-color:black;\nborder-radius: 50px;\ntransition: all 150ms linear;\n}\n`;\n\nexport default DatePickerStyles;","import css from \"./DiaryPage.module.css\";\n\nimport TitlePage from \"../../components/TitlePage/TitlePage\";\n\nimport DayDashboard from \"../../components/DayDashboard/DayDashboard\";\nimport DayExercises from \"../../components/DayExercises/DayExercises\";\nimport DayProducts from \"../../components/DayProducts/DayProducts\";\nimport DaySwitch from \"../../components/DaySwitch/DaySwitch\";\n\nimport { useDispatch } from \"react-redux\";\nimport { fetchAllDiary } from \"../../redux/diary/diaryOperations\";\nimport { useEffect, useState } from \"react\";\nimport formatDate from \"../../utils/formatData\";\n\n\nconst DiaryPage = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  \n  useEffect(() => {\n    const fetchDate = () => {\n      if (selectedDate) {\n        const date = {\n          date: selectedDate,\n        };\n        dispatch(fetchAllDiary(date));\n      }\n    };\n    fetchDate();\n  }, [dispatch, selectedDate]);\n\n  const handleDate = async (date) => {\n    const formatedDate = formatDate(date);\n    await setSelectedDate(formatedDate);\n  };\n\n  return (\n    <div className={css.diaryPage}>\n      <div className={css.calendarWrap}>\n        <TitlePage title=\"Diary\" />\n        <div className={css.calendar}>\n          <DaySwitch handleDate={handleDate} />\n        </div>\n      </div>\n\n      <div className={css.sectionWrap}>\n        <DayDashboard />\n        <div>\n          <DayProducts />\n          <DayExercises />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryPage;\n","export const selectDiaryProducts = state => state.diary.diaryProducts;\nexport const selectDiaryExercises = state => state.diary.diaryExercises;\nexport const selectDiaryIsLoading = state => state.diary.isLoading;\nexport const selectDiaryError = state => state.diary.error;\n","const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n};\n\nexport default capitalizedWord;\n","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\nexport default formatDate;\n"],"names":["_ref","statisticsName","statisticsIcon","statisticsValue","statisticPrimary","_ref$fulfilledNorm","fulfilledNorm","_jsx","_Fragment","children","_jsxs","className","concat","css","Icon","iconId","TitlePage","title","diaryProducts","useSelector","selectDiaryProducts","diaryExercises","selectDiaryExercises","diaryIsLoading","selectDiaryIsLoading","diaryError","selectDiaryError","_user$profileSettings","_user$profileSettings2","user","selectUser","products","execrcises","dailyCalorieIntake","profileSettings","bmr","caloriesConsumed","reduce","sum","product","calories","caloriesRemaining","caloriesBurned","execrcise","timeSport","time","dailyPhysicalActivity","sportsRemaining","Math","floor","_useStatistics","useStatistics","isCaloriesRemaining","isSportsRemaining","StatisticsItem","titleLink","titleRoute","NavLink","to","dispatch","useDispatch","map","_ref2","_id","bodyPart","equipment","name","target","capitalizedWord","onClick","id","deleteExercisesDiary","listName","useDiary","ButtonAddItem","EXERCISES_ROUTE","length","EmptyList","ExercisesTable","i","category","amount","recommended","deleteProductDiary","PRODUCT_ROUTE","ProductsTable","CustomInput","forwardRef","ref","value","onChange","onKeyDown","e","readOnly","handleDate","_useState","useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","calendarOpen","setCalendarOpen","useAuth","userRegistrationDate","registrDate","useEffect","toggleCalendar","prevCalendarOpen","handleIconClick","toggleFn","document","querySelector","click","DatePicker","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","dateFormat","selected","date","event","key","minDate","maxDate","calendarClassName","dayClassName","toDateString","customInput","onClickOutside","prevDate","setHours","setDate","getDate","nextDate","fetchAllDiary","fetchDate","_asyncToGenerator","_regeneratorRuntime","_callee","formatedDate","_context","prev","next","formatDate","stop","_x","apply","arguments","DaySwitch","DayDashboard","DayProducts","DayExercises","state","diary","isLoading","error","word","substring","toUpperCase","day","String","padStart","month","getMonth","year","getFullYear"],"sourceRoot":""}